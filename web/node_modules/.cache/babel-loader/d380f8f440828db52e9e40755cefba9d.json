{"ast":null,"code":"var _jsxFileName = \"/Users/Natalie/Desktop/SeniorPhase/Judge-your-Netflix/web/src/components/GetStarted.js\";\nimport React, { useState } from \"react\";\nimport { Button, Container, Row, Col } from \"react-bootstrap\";\nimport UploadPage from \"./UploadPage\";\nimport Sample from \"./Sample\";\nimport Typewriter from \"typewriter-effect\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst GetStarted = () => {\n  const [showInstruction, setShowInstruction] = useState(false);\n  const [no, setNo] = useState(false);\n  const [showSample, setShowSample] = useState(false);\n  const [okButtonDisplay, setOkButtonDisplay] = useState(\"inline\");\n  const [noButtonColor, setNoButtonColor] = useState(\"outline-light\");\n  const [typingDone, setTypingDone] = useState(false);\n\n  const handleOkButton = () => {\n    setShowInstruction(true);\n  };\n\n  const handleNoButton = () => {\n    setNo(true);\n    setOkButtonDisplay(\"none\");\n    setNoButtonColor(\"dark\");\n  };\n\n  const handleSampleButton = () => {\n    setShowSample(true);\n  };\n\n  const handleDoneTyping = () => {\n    setTypingDone(true);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: showInstruction ? /*#__PURE__*/_jsxDEV(UploadPage, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 9\n    }, this) : showSample ? /*#__PURE__*/_jsxDEV(Sample, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(Container, {\n      className: \"text-left\",\n      children: [/*#__PURE__*/_jsxDEV(Row, {\n        className: \"mb-1\",\n        children: /*#__PURE__*/_jsxDEV(Typewriter, {\n          onInit: typewriter => {\n            typewriter.typeString(\"To get started, I will need to see your Netflix viewing history.\").callFunction(() => {\n              handleDoneTyping();\n            }).start();\n          },\n          options: {\n            deleteSpeed: 30\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 11\n      }, this), typingDone && /*#__PURE__*/_jsxDEV(Row, {\n        className: \"mb-3\",\n        children: [/*#__PURE__*/_jsxDEV(Col, {\n          md: 12,\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"outline-light\",\n            onClick: handleOkButton,\n            style: {\n              display: okButtonDisplay\n            },\n            children: \"Ok, Got it\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(Col, {\n          md: 12,\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            variant: noButtonColor,\n            onClick: handleNoButton,\n            className: \"mb-5\",\n            children: \"No I don't want to share my view history\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 13\n      }, this), no && /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"I can't judge your Netflix without seeing your view history.\", \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"outline-light\",\n          onClick: handleOkButton,\n          children: \"Ok, fine\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"mt-5\",\n          children: \"If you really don't want to, you can check out our analysis based on sample data.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"outline-light\",\n          className: \"mb-5\",\n          onClick: handleSampleButton,\n          children: \"Show me your sample analysis\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this);\n};\n\nexport default GetStarted;","map":{"version":3,"sources":["/Users/Natalie/Desktop/SeniorPhase/Judge-your-Netflix/web/src/components/GetStarted.js"],"names":["React","useState","Button","Container","Row","Col","UploadPage","Sample","Typewriter","GetStarted","showInstruction","setShowInstruction","no","setNo","showSample","setShowSample","okButtonDisplay","setOkButtonDisplay","noButtonColor","setNoButtonColor","typingDone","setTypingDone","handleOkButton","handleNoButton","handleSampleButton","handleDoneTyping","typewriter","typeString","callFunction","start","deleteSpeed","display"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport { Button, Container, Row, Col } from \"react-bootstrap\";\nimport UploadPage from \"./UploadPage\";\nimport Sample from \"./Sample\";\nimport Typewriter from \"typewriter-effect\";\n\nconst GetStarted = () => {\n  const [showInstruction, setShowInstruction] = useState(false);\n  const [no, setNo] = useState(false);\n  const [showSample, setShowSample] = useState(false);\n  const [okButtonDisplay, setOkButtonDisplay] = useState(\"inline\");\n  const [noButtonColor, setNoButtonColor] = useState(\"outline-light\");\n\n  const [typingDone, setTypingDone] = useState(false);\n\n  const handleOkButton = () => {\n    setShowInstruction(true);\n  };\n\n  const handleNoButton = () => {\n    setNo(true);\n    setOkButtonDisplay(\"none\");\n    setNoButtonColor(\"dark\");\n  };\n\n  const handleSampleButton = () => {\n    setShowSample(true);\n  };\n\n  const handleDoneTyping = () => {\n    setTypingDone(true);\n  };\n\n  return (\n    <div>\n      {showInstruction ? (\n        <UploadPage />\n      ) : showSample ? (\n        <Sample />\n      ) : (\n        <Container className=\"text-left\">\n          <Row className=\"mb-1\">\n            <Typewriter\n              onInit={(typewriter) => {\n                typewriter\n                  .typeString(\n                    \"To get started, I will need to see your Netflix viewing history.\"\n                  )\n                  .callFunction(() => {\n                    handleDoneTyping();\n                  })\n                  .start();\n              }}\n              options={{\n                deleteSpeed: 30,\n              }}\n            />\n          </Row>\n          {typingDone && (\n            <Row className=\"mb-3\">\n              <Col md={12}>\n                <Button\n                  variant=\"outline-light\"\n                  onClick={handleOkButton}\n                  style={{ display: okButtonDisplay }}\n                >\n                  Ok, Got it\n                </Button>\n              </Col>\n              <Col md={12}>\n                <Button\n                  variant={noButtonColor}\n                  onClick={handleNoButton}\n                  className=\"mb-5\"\n                >\n                  No I don't want to share my view history\n                </Button>\n              </Col>\n            </Row>\n          )}\n          {no && (\n            <div>\n              <p>\n                I can't judge your Netflix without seeing your view history.{\" \"}\n              </p>\n              <Button variant=\"outline-light\" onClick={handleOkButton}>\n                Ok, fine\n              </Button>\n              <p className=\"mt-5\">\n                If you really don't want to, you can check out our analysis\n                based on sample data.\n              </p>\n              <Button\n                variant=\"outline-light\"\n                className=\"mb-5\"\n                onClick={handleSampleButton}\n              >\n                Show me your sample analysis\n              </Button>\n            </div>\n          )}\n        </Container>\n      )}\n    </div>\n  );\n};\n\nexport default GetStarted;\n"]},"metadata":{},"sourceType":"module"}