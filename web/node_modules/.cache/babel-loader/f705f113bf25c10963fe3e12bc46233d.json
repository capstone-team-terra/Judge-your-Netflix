{"ast":null,"code":"var _jsxFileName = \"/Users/Natalie/Desktop/SeniorPhase/Judge-your-Netflix/web/src/components/resultsComponent/ViewCount.js\";\nimport React from \"react\";\nimport { Line } from \"react-chartjs-2\";\nimport moment from \"moment\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function ViewCount(props) {\n  const {\n    result\n  } = props; //convert data object to arrays\n\n  const resultsArr = Object.entries(result); //define yValues & xValues to be used with your chart\n\n  const yValues = resultsArr.map(data => data[1]);\n  const xValues = resultsArr.map(data => moment(data[0]).format(\"MMM YY\")); //main data set for Graph\n\n  const resultData = {\n    labels: xValues,\n    datasets: [{\n      labels: \"Your View Count\",\n      data: yValues,\n      backgroundColor: \"rgba(87, 121, 234, 0.6)\",\n      borderColor: \"rgba(87, 121, 234, 0.6)\",\n      pointHoverRadius: 20,\n      pointHoverBorderWidth: 5\n    }]\n  }; //option for Graph\n\n  const options = {\n    maintainAspectRatio: false,\n    title: {\n      display: true,\n      text: \"Your View Count History\",\n      fontSize: 25\n    },\n    legend: {\n      display: false\n    },\n    scales: {\n      yAxes: [{\n        scaleLabel: {\n          display: true,\n          labelString: \"total view count (per watch event)\"\n        }\n      }]\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(Line, {\n        data: resultData,\n        options: options,\n        width: 600,\n        height: 400\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 5\n  }, this);\n}","map":{"version":3,"sources":["/Users/Natalie/Desktop/SeniorPhase/Judge-your-Netflix/web/src/components/resultsComponent/ViewCount.js"],"names":["React","Line","moment","ViewCount","props","result","resultsArr","Object","entries","yValues","map","data","xValues","format","resultData","labels","datasets","backgroundColor","borderColor","pointHoverRadius","pointHoverBorderWidth","options","maintainAspectRatio","title","display","text","fontSize","legend","scales","yAxes","scaleLabel","labelString"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,IAAT,QAAqB,iBAArB;AACA,OAAOC,MAAP,MAAmB,QAAnB;;AAEA,eAAe,SAASC,SAAT,CAAmBC,KAAnB,EAA0B;AACvC,QAAM;AAAEC,IAAAA;AAAF,MAAaD,KAAnB,CADuC,CAGvC;;AACA,QAAME,UAAU,GAAGC,MAAM,CAACC,OAAP,CAAeH,MAAf,CAAnB,CAJuC,CAMvC;;AACA,QAAMI,OAAO,GAAGH,UAAU,CAACI,GAAX,CAAgBC,IAAD,IAAUA,IAAI,CAAC,CAAD,CAA7B,CAAhB;AACA,QAAMC,OAAO,GAAGN,UAAU,CAACI,GAAX,CAAgBC,IAAD,IAAUT,MAAM,CAACS,IAAI,CAAC,CAAD,CAAL,CAAN,CAAgBE,MAAhB,CAAuB,QAAvB,CAAzB,CAAhB,CARuC,CAUvC;;AACA,QAAMC,UAAU,GAAG;AACjBC,IAAAA,MAAM,EAAEH,OADS;AAEjBI,IAAAA,QAAQ,EAAE,CACR;AACED,MAAAA,MAAM,EAAE,iBADV;AAEEJ,MAAAA,IAAI,EAAEF,OAFR;AAGEQ,MAAAA,eAAe,EAAE,yBAHnB;AAIEC,MAAAA,WAAW,EAAE,yBAJf;AAKEC,MAAAA,gBAAgB,EAAE,EALpB;AAMEC,MAAAA,qBAAqB,EAAE;AANzB,KADQ;AAFO,GAAnB,CAXuC,CAyBvC;;AACA,QAAMC,OAAO,GAAG;AACdC,IAAAA,mBAAmB,EAAE,KADP;AAEdC,IAAAA,KAAK,EAAE;AACLC,MAAAA,OAAO,EAAE,IADJ;AAELC,MAAAA,IAAI,EAAE,yBAFD;AAGLC,MAAAA,QAAQ,EAAE;AAHL,KAFO;AAOdC,IAAAA,MAAM,EAAE;AACNH,MAAAA,OAAO,EAAE;AADH,KAPM;AAUdI,IAAAA,MAAM,EAAE;AACNC,MAAAA,KAAK,EAAE,CACL;AACEC,QAAAA,UAAU,EAAE;AACVN,UAAAA,OAAO,EAAE,IADC;AAEVO,UAAAA,WAAW,EAAE;AAFH;AADd,OADK;AADD;AAVM,GAAhB;AAqBA,sBACE;AAAA,2BACE;AAAA,6BACE,QAAC,IAAD;AAAM,QAAA,IAAI,EAAEjB,UAAZ;AAAwB,QAAA,OAAO,EAAEO,OAAjC;AAA0C,QAAA,KAAK,EAAE,GAAjD;AAAsD,QAAA,MAAM,EAAE;AAA9D;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAOD","sourcesContent":["import React from \"react\";\nimport { Line } from \"react-chartjs-2\";\nimport moment from \"moment\";\n\nexport default function ViewCount(props) {\n  const { result } = props;\n\n  //convert data object to arrays\n  const resultsArr = Object.entries(result);\n\n  //define yValues & xValues to be used with your chart\n  const yValues = resultsArr.map((data) => data[1]);\n  const xValues = resultsArr.map((data) => moment(data[0]).format(\"MMM YY\"));\n\n  //main data set for Graph\n  const resultData = {\n    labels: xValues,\n    datasets: [\n      {\n        labels: \"Your View Count\",\n        data: yValues,\n        backgroundColor: \"rgba(87, 121, 234, 0.6)\",\n        borderColor: \"rgba(87, 121, 234, 0.6)\",\n        pointHoverRadius: 20,\n        pointHoverBorderWidth: 5,\n      },\n    ],\n  };\n\n  //option for Graph\n  const options = {\n    maintainAspectRatio: false,\n    title: {\n      display: true,\n      text: \"Your View Count History\",\n      fontSize: 25,\n    },\n    legend: {\n      display: false,\n    },\n    scales: {\n      yAxes: [\n        {\n          scaleLabel: {\n            display: true,\n            labelString: \"total view count (per watch event)\",\n          },\n        },\n      ],\n    },\n  };\n  return (\n    <div>\n      <div>\n        <Line data={resultData} options={options} width={600} height={400} />\n      </div>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}