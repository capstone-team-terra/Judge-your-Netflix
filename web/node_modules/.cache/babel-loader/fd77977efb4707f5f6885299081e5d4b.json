{"ast":null,"code":"var _jsxFileName = \"/Users/Natalie/Desktop/SeniorPhase/Judge-your-Netflix/web/src/components/resultsComponent/ShowsCount.js\";\nimport React from \"react\";\nimport { Bar } from \"react-chartjs-2\";\nimport { Card, Button, Container, Row, Col } from \"react-bootstrap\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function ShowsCount(props) {\n  const {\n    result\n  } = props; //convert data object to arrays\n\n  const resultsArr = Object.entries(result); //sort the data to small to large\n\n  const sorted = resultsArr.sort((a, b) => a[1] - b[1]); //filter only the top 20 most viewed shows/movies\n\n  const limitToTopTwenty = sorted.slice(-20); //define yValues & xValues to be used with your chart\n\n  const yValues = limitToTopTwenty.map(data => data[1]);\n  const xValues = limitToTopTwenty.map(data => data[0]); //main data set for Graph\n\n  const resultData = {\n    labels: xValues,\n    datasets: [{\n      data: yValues,\n      backgroundColor: \"rgba(234, 87, 102, 0.6)\",\n      borderColor: \"rgba(234, 87, 102, 0.6)\"\n    }]\n  }; //option for Graph\n\n  const options = {\n    maintainAspectRatio: false,\n    // title: {\n    //   display: true,\n    //   text: \"Your Top Viewed Shows\",\n    //   fontSize: 25,\n    // },\n    legend: {\n      display: false\n    },\n    scales: {\n      yAxes: [{\n        scaleLabel: {\n          display: true,\n          labelString: \"total view count (per watch event)\",\n          fontColor: \"rgb(224, 228, 228)\"\n        },\n        ticks: {\n          fontColor: \"rgb(224, 228, 228)\"\n        }\n      }],\n      xAxes: [{\n        scaleLabel: {\n          fontColor: \"rgb(224, 228, 228)\"\n        },\n        ticks: {\n          fontColor: \"rgb(224, 228, 228)\"\n        }\n      }]\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n      children: [\"You watched\", \" \", /*#__PURE__*/_jsxDEV(\"span\", {\n        style: {\n          color: \"blue\"\n        },\n        children: [\"\\\"\", sorted[sorted.length - 1][0], \"\\\"\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this), \" \", /*#__PURE__*/_jsxDEV(\"span\", {\n        style: {\n          color: \"red\"\n        },\n        children: sorted[sorted.length - 1][1]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this), \" \", \"times!\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n      style: {\n        textAlign: \"center\"\n      },\n      children: \"Top 3 Results\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ol\", {\n      style: {\n        display: \"flex\",\n        flexDirection: \"column\",\n        alignItems: \"center\",\n        textAlign: \"left\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"li\", {\n        children: [sorted[sorted.length - 1][0], \": \", sorted[sorted.length - 1][1]]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [sorted[sorted.length - 2][0], \" : \", sorted[sorted.length - 2][1]]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [sorted[sorted.length - 3][0], \": \", sorted[sorted.length - 3][1]]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Card, {\n      style: {\n        backgroundColor: \"rgb(34, 36, 41)\",\n        boxShadow: \"0 0 6px rgba(0, 0, 0, 0.1)\",\n        // position: \"absolute\",\n        // top: \"50%\",\n        // left: \"50%\",\n        // transform: \"translate(-50%, -50%)\",\n        maxWidth: \"500px\",\n        height: \"375px\",\n        borderRadius: \"10px\",\n        overflow: \"hidden\",\n        padding: \"1em\"\n      },\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(Bar, {\n          data: resultData,\n          options: options,\n          width: 500,\n          height: 400\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 70,\n    columnNumber: 5\n  }, this);\n}","map":{"version":3,"sources":["/Users/Natalie/Desktop/SeniorPhase/Judge-your-Netflix/web/src/components/resultsComponent/ShowsCount.js"],"names":["React","Bar","Card","Button","Container","Row","Col","ShowsCount","props","result","resultsArr","Object","entries","sorted","sort","a","b","limitToTopTwenty","slice","yValues","map","data","xValues","resultData","labels","datasets","backgroundColor","borderColor","options","maintainAspectRatio","legend","display","scales","yAxes","scaleLabel","labelString","fontColor","ticks","xAxes","color","length","textAlign","flexDirection","alignItems","boxShadow","maxWidth","height","borderRadius","overflow","padding"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { Bar } from \"react-chartjs-2\";\nimport { Card, Button, Container, Row, Col } from \"react-bootstrap\";\n\nexport default function ShowsCount(props) {\n  const { result } = props;\n\n  //convert data object to arrays\n  const resultsArr = Object.entries(result);\n\n  //sort the data to small to large\n  const sorted = resultsArr.sort((a, b) => a[1] - b[1]);\n\n  //filter only the top 20 most viewed shows/movies\n  const limitToTopTwenty = sorted.slice(-20);\n\n  //define yValues & xValues to be used with your chart\n  const yValues = limitToTopTwenty.map((data) => data[1]);\n  const xValues = limitToTopTwenty.map((data) => data[0]);\n\n  //main data set for Graph\n  const resultData = {\n    labels: xValues,\n    datasets: [\n      {\n        data: yValues,\n        backgroundColor: \"rgba(234, 87, 102, 0.6)\",\n        borderColor: \"rgba(234, 87, 102, 0.6)\",\n      },\n    ],\n  };\n\n  //option for Graph\n  const options = {\n    maintainAspectRatio: false,\n    // title: {\n    //   display: true,\n    //   text: \"Your Top Viewed Shows\",\n    //   fontSize: 25,\n    // },\n    legend: {\n      display: false,\n    },\n    scales: {\n      yAxes: [\n        {\n          scaleLabel: {\n            display: true,\n            labelString: \"total view count (per watch event)\",\n            fontColor: \"rgb(224, 228, 228)\",\n          },\n          ticks: {\n            fontColor: \"rgb(224, 228, 228)\",\n          },\n        },\n      ],\n      xAxes: [\n        {\n          scaleLabel: {\n            fontColor: \"rgb(224, 228, 228)\",\n          },\n          ticks: {\n            fontColor: \"rgb(224, 228, 228)\",\n          },\n        },\n      ],\n    },\n  };\n  return (\n    <div>\n      <h4>\n        You watched{\" \"}\n        <span style={{ color: \"blue\" }}>\"{sorted[sorted.length - 1][0]}\"</span>{\" \"}\n        <span style={{ color: \"red\" }}>{sorted[sorted.length - 1][1]}</span>{\" \"}\n        times!\n      </h4>\n      <h4 style={{ textAlign: \"center\" }}>Top 3 Results</h4>\n      <ol\n        style={{\n          display: \"flex\",\n          flexDirection: \"column\",\n          alignItems: \"center\",\n          textAlign: \"left\",\n        }}\n      >\n        <li>\n          {sorted[sorted.length - 1][0]}: {sorted[sorted.length - 1][1]}\n        </li>\n        <li>\n          {sorted[sorted.length - 2][0]} : {sorted[sorted.length - 2][1]}\n        </li>\n        <li>\n          {sorted[sorted.length - 3][0]}: {sorted[sorted.length - 3][1]}\n        </li>\n      </ol>\n      <Card\n        style={{\n          backgroundColor: \"rgb(34, 36, 41)\",\n          boxShadow: \"0 0 6px rgba(0, 0, 0, 0.1)\",\n          // position: \"absolute\",\n          // top: \"50%\",\n          // left: \"50%\",\n          // transform: \"translate(-50%, -50%)\",\n          maxWidth: \"500px\",\n          height: \"375px\",\n          borderRadius: \"10px\",\n          overflow: \"hidden\",\n          padding: \"1em\",\n        }}\n      >\n        <div>\n          <Bar data={resultData} options={options} width={500} height={400} />\n        </div>\n      </Card>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}