{"ast":null,"code":"var _jsxFileName = \"/Users/Natalie/Desktop/SeniorPhase/Judge-your-Netflix/web/src/components/GetStarted.js\";\nimport React, { useState } from \"react\";\nimport { Button, Container, Row, Col } from \"react-bootstrap\";\nimport InstructionPage from \"./Instruction\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst GetStarted = () => {\n  const [instruction, setInstruction] = useState(false);\n  const [sample, setSample] = useState(false);\n  const [noButtonDisplay, setNoButtonDisplay] = useState(\"inline\");\n  const [okButtonDisplay, setOkButtonDisplay] = useState(\"inline\");\n  const [okButtonColor, setOkButtonColor] = useState(\"light\");\n  const [noButtonColor, setNoButtonColor] = useState(\"light\");\n\n  const handleOkButton = () => {\n    setInstruction(true);\n    setNoButtonDisplay(\"none\");\n    setOkButtonColor(\"dark\");\n  };\n\n  const handleSampleButton = () => {\n    setSample(prevProp => !prevProp);\n    setOkButtonDisplay(\"none\");\n    setNoButtonColor(\"dark\");\n  };\n\n  return /*#__PURE__*/_jsxDEV(Container, {\n    className: \"text-right\",\n    children: [/*#__PURE__*/_jsxDEV(Row, {\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"To get started, I will need to see your Netflix viewing history. Don't worry, I will just take a look at what you watched. I won't post or change anything.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Row, {\n      className: \"mb-3\",\n      children: /*#__PURE__*/_jsxDEV(Col, {\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          variant: okButtonColor,\n          onClick: handleOkButton,\n          style: {\n            display: okButtonDisplay\n          },\n          children: \"Got it\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Row, {\n      className: \"mb-4\",\n      children: /*#__PURE__*/_jsxDEV(Col, {\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          variant: noButtonColor,\n          onClick: handleSampleButton,\n          style: {\n            display: noButtonDisplay\n          },\n          children: \"No I don't want to share my view history\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), sample && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"I can't judge your Netflix without seeing your view history. I guess you can see how great our analysis could be using our sample data.....\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Link, {\n        to: \"/sample\",\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          children: \"Show me sample analysis\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 9\n    }, this), instruction && /*#__PURE__*/_jsxDEV(InstructionPage, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 23\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 5\n  }, this);\n};\n\nexport default GetStarted;","map":{"version":3,"sources":["/Users/Natalie/Desktop/SeniorPhase/Judge-your-Netflix/web/src/components/GetStarted.js"],"names":["React","useState","Button","Container","Row","Col","InstructionPage","GetStarted","instruction","setInstruction","sample","setSample","noButtonDisplay","setNoButtonDisplay","okButtonDisplay","setOkButtonDisplay","okButtonColor","setOkButtonColor","noButtonColor","setNoButtonColor","handleOkButton","handleSampleButton","prevProp","display"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,MAAT,EAAiBC,SAAjB,EAA4BC,GAA5B,EAAiCC,GAAjC,QAA4C,iBAA5C;AACA,OAAOC,eAAP,MAA4B,eAA5B;;;AAEA,MAAMC,UAAU,GAAG,MAAM;AACvB,QAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCR,QAAQ,CAAC,KAAD,CAA9C;AACA,QAAM,CAACS,MAAD,EAASC,SAAT,IAAsBV,QAAQ,CAAC,KAAD,CAApC;AACA,QAAM,CAACW,eAAD,EAAkBC,kBAAlB,IAAwCZ,QAAQ,CAAC,QAAD,CAAtD;AACA,QAAM,CAACa,eAAD,EAAkBC,kBAAlB,IAAwCd,QAAQ,CAAC,QAAD,CAAtD;AACA,QAAM,CAACe,aAAD,EAAgBC,gBAAhB,IAAoChB,QAAQ,CAAC,OAAD,CAAlD;AACA,QAAM,CAACiB,aAAD,EAAgBC,gBAAhB,IAAoClB,QAAQ,CAAC,OAAD,CAAlD;;AAEA,QAAMmB,cAAc,GAAG,MAAM;AAC3BX,IAAAA,cAAc,CAAC,IAAD,CAAd;AACAI,IAAAA,kBAAkB,CAAC,MAAD,CAAlB;AACAI,IAAAA,gBAAgB,CAAC,MAAD,CAAhB;AACD,GAJD;;AAMA,QAAMI,kBAAkB,GAAG,MAAM;AAC/BV,IAAAA,SAAS,CAAEW,QAAD,IAAc,CAACA,QAAhB,CAAT;AACAP,IAAAA,kBAAkB,CAAC,MAAD,CAAlB;AACAI,IAAAA,gBAAgB,CAAC,MAAD,CAAhB;AACD,GAJD;;AAMA,sBACE,QAAC,SAAD;AAAW,IAAA,SAAS,EAAC,YAArB;AAAA,4BACE,QAAC,GAAD;AAAA,6BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF,eAQE,QAAC,GAAD;AAAK,MAAA,SAAS,EAAC,MAAf;AAAA,6BACE,QAAC,GAAD;AAAA,+BACE,QAAC,MAAD;AACE,UAAA,OAAO,EAAEH,aADX;AAEE,UAAA,OAAO,EAAEI,cAFX;AAGE,UAAA,KAAK,EAAE;AAAEG,YAAAA,OAAO,EAAET;AAAX,WAHT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YARF,eAmBE,QAAC,GAAD;AAAK,MAAA,SAAS,EAAC,MAAf;AAAA,6BACE,QAAC,GAAD;AAAA,+BACE,QAAC,MAAD;AACE,UAAA,OAAO,EAAEI,aADX;AAEE,UAAA,OAAO,EAAEG,kBAFX;AAGE,UAAA,KAAK,EAAE;AAAEE,YAAAA,OAAO,EAAEX;AAAX,WAHT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAnBF,EA8BGF,MAAM,iBACL;AAAA,8BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAME,QAAC,IAAD;AAAM,QAAA,EAAE,EAAC,SAAT;AAAA,+BACE,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cANF;AAAA;AAAA;AAAA;AAAA;AAAA,YA/BJ,EA0CGF,WAAW,iBAAI,QAAC,eAAD;AAAA;AAAA;AAAA;AAAA,YA1ClB;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AA8CD,CAlED;;AAoEA,eAAeD,UAAf","sourcesContent":["import React, { useState } from \"react\";\nimport { Button, Container, Row, Col } from \"react-bootstrap\";\nimport InstructionPage from \"./Instruction\";\n\nconst GetStarted = () => {\n  const [instruction, setInstruction] = useState(false);\n  const [sample, setSample] = useState(false);\n  const [noButtonDisplay, setNoButtonDisplay] = useState(\"inline\");\n  const [okButtonDisplay, setOkButtonDisplay] = useState(\"inline\");\n  const [okButtonColor, setOkButtonColor] = useState(\"light\");\n  const [noButtonColor, setNoButtonColor] = useState(\"light\");\n\n  const handleOkButton = () => {\n    setInstruction(true);\n    setNoButtonDisplay(\"none\");\n    setOkButtonColor(\"dark\");\n  };\n\n  const handleSampleButton = () => {\n    setSample((prevProp) => !prevProp);\n    setOkButtonDisplay(\"none\");\n    setNoButtonColor(\"dark\");\n  };\n\n  return (\n    <Container className=\"text-right\">\n      <Row>\n        <p>\n          To get started, I will need to see your Netflix viewing history. Don't\n          worry, I will just take a look at what you watched. I won't post or\n          change anything.\n        </p>\n      </Row>\n      <Row className=\"mb-3\">\n        <Col>\n          <Button\n            variant={okButtonColor}\n            onClick={handleOkButton}\n            style={{ display: okButtonDisplay }}\n          >\n            Got it\n          </Button>\n        </Col>\n      </Row>\n      <Row className=\"mb-4\">\n        <Col>\n          <Button\n            variant={noButtonColor}\n            onClick={handleSampleButton}\n            style={{ display: noButtonDisplay }}\n          >\n            No I don't want to share my view history\n          </Button>\n        </Col>\n      </Row>\n      {sample && (\n        <div>\n          <p>\n            I can't judge your Netflix without seeing your view history. I guess\n            you can see how great our analysis could be using our sample\n            data.....\n          </p>\n          <Link to=\"/sample\">\n            <Button>Show me sample analysis</Button>\n          </Link>\n        </div>\n      )}\n      {instruction && <InstructionPage />}\n    </Container>\n  );\n};\n\nexport default GetStarted;\n"]},"metadata":{},"sourceType":"module"}