{"ast":null,"code":"var _jsxFileName = \"/Users/Natalie/Desktop/SeniorPhase/Judge-your-Netflix/web/src/components/resultsComponent/RunTime.js\";\nimport React from \"react\";\nimport { Line, Bar } from \"react-chartjs-2\";\nimport moment from \"moment\";\nimport { Card } from \"react-bootstrap\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function RunTime(props) {\n  const {\n    result\n  } = props; //convert data object to arrays\n\n  const resultsArr = Object.entries(result); //get only past 1 year data\n\n  const pastYear = resultsArr.slice(-12); //total view time\n\n  const sumMin = Object.keys(result).reduce((acc, key) => acc + result[key], 0);\n  console.log(sumMin);\n  const sumHrs = Math.floor(sumMin / 60);\n  const sumDays = Math.floor(sumHrs / 24);\n  const sumMonth = Math.floor(sumDays / 30); //define yValues & xValues to be used with your chart\n\n  const xValues = pastYear.map(data => moment(data[0]).format(\"MMM YY\"));\n  const yValues = pastYear.map(data => Math.floor(data[1] / 60)); //main data set for Graph\n\n  const resultData = {\n    labels: xValues,\n    datasets: [{\n      data: yValues,\n      backgroundColor: \"rgba(244, 162, 97, 0.6)\",\n      borderColor: \"rgba(244, 162, 97, 0.6)\",\n      pointHoverRadius: 20,\n      pointHoverBorderWidth: 5\n    }]\n  }; //option for Graph\n\n  const options = {\n    maintainAspectRatio: false,\n    legend: {\n      display: false\n    },\n    scales: {\n      yAxes: [{\n        scaleLabel: {\n          display: true,\n          labelString: \"Total view time (per hour)\",\n          fontColor: \"rgb(224, 228, 228)\",\n          fontSize: 15\n        },\n        ticks: {\n          fontColor: \"rgb(224, 228, 228)\",\n          fontSize: 15\n        },\n        gridLines: {\n          color: \"rgb(25, 25, 25)\"\n        }\n      }],\n      xAxes: [{\n        scaleLabel: {\n          display: true,\n          labelString: \"*Abbreviated to only show past year data (per month)\",\n          fontColor: \"rgb(224, 228, 228)\",\n          fontSize: 15\n        },\n        ticks: {\n          fontColor: \"rgb(224, 228, 228)\",\n          fontSize: 15\n        },\n        gridLines: {\n          color: \"rgb(25, 25, 25)\"\n        }\n      }]\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Card, {\n    style: {\n      background: \"rgb(34, 36, 41)\",\n      boxShadow: \"0px 0px 10px 5px rgba(100, 100, 100, .6)\",\n      maxWidth: \"700px\",\n      height: \"690px\",\n      borderRadius: \"10px\",\n      overflow: \"hidden\",\n      paddingTop: \"1.5em\",\n      paddingRight: \"1.5em\",\n      paddingLeft: \"1.5em\",\n      paddingBottom: \"1em\",\n      margin: \"1em\",\n      color: \"rgb(224, 228, 228)\",\n      display: \"flex\",\n      justifyContent: \"space-between\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(Card.Title, {\n      style: {\n        textAlign: \"center\",\n        fontSize: 30\n      },\n      children: \"Total hours you spent on Netflix\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(Bar, {\n        data: resultData,\n        options: options,\n        width: 500,\n        height: 400\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        style: {\n          fontSize: \"20px\",\n          fontStyle: \"italic\"\n        },\n        children: [\"You watched\", \" \", /*#__PURE__*/_jsxDEV(\"span\", {\n          style: {\n            color: \"rgba(234, 87, 102)\"\n          },\n          children: sumHrs\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 11\n        }, this), \" hours worth of Netflix shows since you signed up...\", \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        style: {\n          fontSize: \"15px\",\n          fontStyle: \"italic\"\n        },\n        children: [\"That is about\", \" \", /*#__PURE__*/_jsxDEV(\"span\", {\n          style: {\n            color: \"rgba(234, 87, 102)\"\n          },\n          children: sumDays\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 11\n        }, this), \" days (or \", sumMonth, \" months) you wasted.. Just saying.\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 84,\n    columnNumber: 5\n  }, this);\n}","map":{"version":3,"sources":["/Users/Natalie/Desktop/SeniorPhase/Judge-your-Netflix/web/src/components/resultsComponent/RunTime.js"],"names":["React","Line","Bar","moment","Card","RunTime","props","result","resultsArr","Object","entries","pastYear","slice","sumMin","keys","reduce","acc","key","console","log","sumHrs","Math","floor","sumDays","sumMonth","xValues","map","data","format","yValues","resultData","labels","datasets","backgroundColor","borderColor","pointHoverRadius","pointHoverBorderWidth","options","maintainAspectRatio","legend","display","scales","yAxes","scaleLabel","labelString","fontColor","fontSize","ticks","gridLines","color","xAxes","background","boxShadow","maxWidth","height","borderRadius","overflow","paddingTop","paddingRight","paddingLeft","paddingBottom","margin","justifyContent","textAlign","fontStyle"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { Line, Bar } from \"react-chartjs-2\";\nimport moment from \"moment\";\nimport { Card } from \"react-bootstrap\";\n\nexport default function RunTime(props) {\n  const { result } = props;\n\n  //convert data object to arrays\n  const resultsArr = Object.entries(result);\n\n  //get only past 1 year data\n  const pastYear = resultsArr.slice(-12);\n\n  //total view time\n  const sumMin = Object.keys(result).reduce((acc, key) => acc + result[key], 0);\n  console.log(sumMin);\n  const sumHrs = Math.floor(sumMin / 60);\n  const sumDays = Math.floor(sumHrs / 24);\n  const sumMonth = Math.floor(sumDays / 30);\n\n  //define yValues & xValues to be used with your chart\n  const xValues = pastYear.map((data) => moment(data[0]).format(\"MMM YY\"));\n  const yValues = pastYear.map((data) => Math.floor(data[1] / 60));\n\n  //main data set for Graph\n  const resultData = {\n    labels: xValues,\n    datasets: [\n      {\n        data: yValues,\n        backgroundColor: \"rgba(244, 162, 97, 0.6)\",\n        borderColor: \"rgba(244, 162, 97, 0.6)\",\n        pointHoverRadius: 20,\n        pointHoverBorderWidth: 5,\n      },\n    ],\n  };\n\n  //option for Graph\n  const options = {\n    maintainAspectRatio: false,\n    legend: {\n      display: false,\n    },\n    scales: {\n      yAxes: [\n        {\n          scaleLabel: {\n            display: true,\n            labelString: \"Total view time (per hour)\",\n            fontColor: \"rgb(224, 228, 228)\",\n            fontSize: 15,\n          },\n          ticks: {\n            fontColor: \"rgb(224, 228, 228)\",\n            fontSize: 15,\n          },\n          gridLines: {\n            color: \"rgb(25, 25, 25)\",\n          },\n        },\n      ],\n      xAxes: [\n        {\n          scaleLabel: {\n            display: true,\n            labelString: \"*Abbreviated to only show past year data (per month)\",\n            fontColor: \"rgb(224, 228, 228)\",\n            fontSize: 15,\n          },\n          ticks: {\n            fontColor: \"rgb(224, 228, 228)\",\n            fontSize: 15,\n          },\n          gridLines: {\n            color: \"rgb(25, 25, 25)\",\n          },\n        },\n      ],\n    },\n  };\n  return (\n    <Card\n      style={{\n        background: \"rgb(34, 36, 41)\",\n        boxShadow: \"0px 0px 10px 5px rgba(100, 100, 100, .6)\",\n        maxWidth: \"700px\",\n        height: \"690px\",\n        borderRadius: \"10px\",\n        overflow: \"hidden\",\n        paddingTop: \"1.5em\",\n        paddingRight: \"1.5em\",\n        paddingLeft: \"1.5em\",\n        paddingBottom: \"1em\",\n        margin: \"1em\",\n        color: \"rgb(224, 228, 228)\",\n        display: \"flex\",\n        justifyContent: \"space-between\",\n      }}\n    >\n      <Card.Title style={{ textAlign: \"center\", fontSize: 30 }}>\n        Total hours you spent on Netflix\n      </Card.Title>\n      <div>\n        <Bar data={resultData} options={options} width={500} height={400} />\n      </div>\n      <div>\n        <p style={{ fontSize: \"20px\", fontStyle: \"italic\" }}>\n          You watched{\" \"}\n          <span style={{ color: \"rgba(234, 87, 102)\" }}>{sumHrs}</span> hours\n          worth of Netflix shows since you signed up...{\" \"}\n        </p>\n        <p style={{ fontSize: \"15px\", fontStyle: \"italic\" }}>\n          That is about{\" \"}\n          <span style={{ color: \"rgba(234, 87, 102)\" }}>{sumDays}</span> days\n          (or {sumMonth} months) you wasted.. Just saying.\n        </p>\n      </div>\n    </Card>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}