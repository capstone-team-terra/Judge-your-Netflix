{"ast":null,"code":"var _jsxFileName = \"/Users/Natalie/Desktop/SeniorPhase/Judge-your-Netflix/web/src/components/resultsComponent/RunTime.js\";\nimport React from \"react\";\nimport { Line } from \"react-chartjs-2\";\nimport moment from \"moment\";\nimport { Card } from \"react-bootstrap\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function RunTime(props) {\n  const {\n    result\n  } = props; //convert data object to arrays\n\n  const resultsArr = Object.entries(result); //total view time\n\n  const sumMin = Object.keys(result).reduce((acc, key) => acc + result[key], 0);\n  const sumHrs = Math.floor(sumMin / 60);\n  const sumDays = Math.floor(sumHrs / 24);\n  const sumMonth = Math.floor(sumDays / 30);\n  const sumYear = Math.floor(sumMonth / 12); //define yValues & xValues to be used with your chart\n\n  const xValues = resultsArr.map(data => moment(data[0]).format(\"MMM YY\"));\n  const yValues = resultsArr.map(data => Math.ceil(data[1] / 60)); //main data set for Graph\n\n  const resultData = {\n    labels: xValues,\n    datasets: [{\n      data: yValues,\n      backgroundColor: \"rgba(244, 162, 97, 0.6)\",\n      borderColor: \"rgba(244, 162, 97, 0.6)\",\n      pointHoverRadius: 20,\n      pointHoverBorderWidth: 5\n    }]\n  }; //option for Graph\n\n  const options = {\n    maintainAspectRatio: false,\n    title: {\n      display: true,\n      text: \"How many hours did you spend on Netflix?\",\n      fontSize: 20,\n      fontColor: \"rgb(224, 228, 228)\"\n    },\n    legend: {\n      display: false\n    },\n    scales: {\n      yAxes: [{\n        scaleLabel: {\n          display: true,\n          labelString: \"total view time (per hours)\",\n          fontColor: \"rgb(224, 228, 228)\"\n        },\n        ticks: {\n          fontColor: \"rgb(224, 228, 228)\"\n        }\n      }],\n      xAxes: [{\n        scaleLabel: {\n          fontColor: \"rgb(224, 228, 228)\"\n        },\n        ticks: {\n          fontColor: \"rgb(224, 228, 228)\"\n        }\n      }]\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Card, {\n    style: {\n      background: \"rgb(34, 36, 41)\",\n      boxShadow: \"0px 0px 20px 10px rgba(100, 100, 100, .3)\",\n      maxWidth: \"600px\",\n      height: \"680px\",\n      borderRadius: \"10px\",\n      overflow: \"hidden\",\n      padding: \"2em\",\n      margin: \"1em\",\n      color: \"rgb(224, 228, 228)\",\n      display: \"flex\",\n      justifyContent: \"space-around\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(Line, {\n        data: resultData,\n        options: options,\n        width: 500,\n        height: 400\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        style: {\n          fontSize: \"18px\"\n        },\n        children: [\"You watched total of\", \" \", /*#__PURE__*/_jsxDEV(\"span\", {\n          style: {\n            color: \"rgba(234, 87, 102)\"\n          },\n          children: sumHrs\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 11\n        }, this), \" hours worth of Netflix shows since you signed up...!\", \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        style: {\n          fontSize: \"18px\"\n        },\n        children: [\"That is about\", \" \", /*#__PURE__*/_jsxDEV(\"span\", {\n          style: {\n            color: \"rgba(234, 87, 102)\"\n          },\n          children: sumDays\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 11\n        }, this), \" \", \"days....\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        style: {\n          fontSize: \"18px\"\n        },\n        children: [\"or, \", /*#__PURE__*/_jsxDEV(\"span\", {\n          style: {\n            color: \"rgba(234, 87, 102)\"\n          },\n          children: sumMonth\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 15\n        }, this), \" \", \"months....\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 75,\n    columnNumber: 5\n  }, this);\n}","map":{"version":3,"sources":["/Users/Natalie/Desktop/SeniorPhase/Judge-your-Netflix/web/src/components/resultsComponent/RunTime.js"],"names":["React","Line","moment","Card","RunTime","props","result","resultsArr","Object","entries","sumMin","keys","reduce","acc","key","sumHrs","Math","floor","sumDays","sumMonth","sumYear","xValues","map","data","format","yValues","ceil","resultData","labels","datasets","backgroundColor","borderColor","pointHoverRadius","pointHoverBorderWidth","options","maintainAspectRatio","title","display","text","fontSize","fontColor","legend","scales","yAxes","scaleLabel","labelString","ticks","xAxes","background","boxShadow","maxWidth","height","borderRadius","overflow","padding","margin","color","justifyContent"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { Line } from \"react-chartjs-2\";\nimport moment from \"moment\";\nimport { Card } from \"react-bootstrap\";\n\nexport default function RunTime(props) {\n  const { result } = props;\n\n  //convert data object to arrays\n  const resultsArr = Object.entries(result);\n\n  //total view time\n  const sumMin = Object.keys(result).reduce((acc, key) => acc + result[key], 0);\n  const sumHrs = Math.floor(sumMin / 60);\n  const sumDays = Math.floor(sumHrs / 24);\n  const sumMonth = Math.floor(sumDays / 30);\n  const sumYear = Math.floor(sumMonth / 12);\n\n  //define yValues & xValues to be used with your chart\n  const xValues = resultsArr.map((data) => moment(data[0]).format(\"MMM YY\"));\n  const yValues = resultsArr.map((data) => Math.ceil(data[1] / 60));\n\n  //main data set for Graph\n  const resultData = {\n    labels: xValues,\n    datasets: [\n      {\n        data: yValues,\n        backgroundColor: \"rgba(244, 162, 97, 0.6)\",\n        borderColor: \"rgba(244, 162, 97, 0.6)\",\n        pointHoverRadius: 20,\n        pointHoverBorderWidth: 5,\n      },\n    ],\n  };\n\n  //option for Graph\n  const options = {\n    maintainAspectRatio: false,\n    title: {\n      display: true,\n      text: \"How many hours did you spend on Netflix?\",\n      fontSize: 20,\n      fontColor: \"rgb(224, 228, 228)\",\n    },\n    legend: {\n      display: false,\n    },\n    scales: {\n      yAxes: [\n        {\n          scaleLabel: {\n            display: true,\n            labelString: \"total view time (per hours)\",\n            fontColor: \"rgb(224, 228, 228)\",\n          },\n          ticks: {\n            fontColor: \"rgb(224, 228, 228)\",\n          },\n        },\n      ],\n      xAxes: [\n        {\n          scaleLabel: {\n            fontColor: \"rgb(224, 228, 228)\",\n          },\n          ticks: {\n            fontColor: \"rgb(224, 228, 228)\",\n          },\n        },\n      ],\n    },\n  };\n  return (\n    <Card\n      style={{\n        background: \"rgb(34, 36, 41)\",\n        boxShadow: \"0px 0px 20px 10px rgba(100, 100, 100, .3)\",\n        maxWidth: \"600px\",\n        height: \"680px\",\n        borderRadius: \"10px\",\n        overflow: \"hidden\",\n        padding: \"2em\",\n        margin: \"1em\",\n        color: \"rgb(224, 228, 228)\",\n        display: \"flex\",\n        justifyContent: \"space-around\",\n      }}\n    >\n      <div>\n        <Line data={resultData} options={options} width={500} height={400} />\n      </div>\n      <div>\n        <h1 style={{ fontSize: \"18px\" }}>\n          You watched total of{\" \"}\n          <span style={{ color: \"rgba(234, 87, 102)\" }}>{sumHrs}</span> hours\n          worth of Netflix shows since you signed up...!{\" \"}\n        </h1>\n        <p style={{ fontSize: \"18px\" }}>\n          That is about{\" \"}\n          <span style={{ color: \"rgba(234, 87, 102)\" }}>{sumDays}</span>{\" \"}\n          days....\n        </p>\n        <p style={{ fontSize: \"18px\" }}>\n          or, <span style={{ color: \"rgba(234, 87, 102)\" }}>{sumMonth}</span>{\" \"}\n          months....\n        </p>\n      </div>\n    </Card>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}