{"ast":null,"code":"var _jsxFileName = \"/Users/Natalie/Desktop/SeniorPhase/Judge-your-Netflix/web/src/components/resultsComponent/ShowsCount.js\";\nimport React from \"react\";\nimport { Bar } from \"react-chartjs-2\";\nimport { Card, Button, Container, Row, Col } from \"react-bootstrap\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function ShowsCount(props) {\n  const {\n    result\n  } = props; //convert data object to arrays\n\n  const resultsArr = Object.entries(result); //sort the data to small to large\n\n  const sorted = resultsArr.sort((a, b) => a[1] - b[1]); //filter only the top 20 most viewed shows/movies\n\n  const limitToTopTwenty = sorted.slice(-20);\n  const top1Name = limitToTopTwenty[limitToTopTwenty.length - 1][0];\n  const top1Count = limitToTopTwenty[limitToTopTwenty.length - 1][1];\n  const top2Name = limitToTopTwenty[limitToTopTwenty.length - 2][0];\n  const top2Count = limitToTopTwenty[limitToTopTwenty.length - 2][1];\n  const top3Name = limitToTopTwenty[limitToTopTwenty.length - 3][0];\n  const top3Count = limitToTopTwenty[limitToTopTwenty.length - 3][1]; //define yValues & xValues to be used with your chart\n\n  const yValues = limitToTopTwenty.map(data => data[1]);\n  const xValues = limitToTopTwenty.map(data => data[0]); //main data set for Graph\n\n  const resultData = {\n    labels: xValues,\n    datasets: [{\n      data: yValues,\n      backgroundColor: \"rgba(234, 87, 102, 0.6)\",\n      borderColor: \"rgba(234, 87, 102, 0.6)\"\n    }]\n  }; //option for Graph\n\n  const options = {\n    maintainAspectRatio: false,\n    // title: {\n    //   display: true,\n    //   text: \"Your Top Viewed Shows\",\n    //   fontSize: 25,\n    // },\n    legend: {\n      display: false\n    },\n    scales: {\n      yAxes: [{\n        scaleLabel: {\n          display: true,\n          labelString: \"total view count (per watch event)\",\n          fontColor: \"rgb(224, 228, 228)\"\n        },\n        ticks: {\n          fontColor: \"rgb(224, 228, 228)\"\n        }\n      }],\n      xAxes: [{\n        scaleLabel: {\n          fontColor: \"rgb(224, 228, 228)\"\n        },\n        ticks: {\n          fontColor: \"rgb(224, 228, 228)\"\n        }\n      }]\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Card, {\n    style: {\n      backgroundColor: \"rgb(34, 36, 41)\",\n      boxShadow: \"0 0 6px rgba(0, 0, 0, 0.1)\",\n      // position: \"absolute\",\n      // top: \"50%\",\n      // left: \"50%\",\n      // transform: \"translate(-50%, -50%)\",\n      maxWidth: \"500px\",\n      height: \"375px\",\n      borderRadius: \"10px\",\n      overflow: \"hidden\",\n      paddingTop: \"1em\",\n      paddingBotton: \"2em\",\n      color: \"rgb(224, 228, 228)\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(Card.Title, {\n      children: [\"You watched \", /*#__PURE__*/_jsxDEV(\"strong\", {\n        children: top1\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 21\n      }, this), \" \", /*#__PURE__*/_jsxDEV(\"span\", {\n        style: {\n          color: \"red\"\n        },\n        children: sorted[sorted.length - 1][1]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 9\n      }, this), \" \", \"times!\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 7\n    }, this), \" \", /*#__PURE__*/_jsxDEV(Card.Subtitle, {\n      style: {\n        textAlign: \"center\"\n      },\n      children: \"Your Top 3\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ol\", {\n      style: {\n        display: \"flex\",\n        flexDirection: \"column\",\n        alignItems: \"center\",\n        textAlign: \"left\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"li\", {\n        children: [top1, \": \", sorted[sorted.length - 1][1]]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [top2, \" : \", sorted[sorted.length - 2][1]]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [sorted[sorted.length - 3][0], \": \", sorted[sorted.length - 3][1]]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(Bar, {\n        data: resultData,\n        options: options,\n        width: 500,\n        height: 400\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 77,\n    columnNumber: 5\n  }, this);\n}","map":{"version":3,"sources":["/Users/Natalie/Desktop/SeniorPhase/Judge-your-Netflix/web/src/components/resultsComponent/ShowsCount.js"],"names":["React","Bar","Card","Button","Container","Row","Col","ShowsCount","props","result","resultsArr","Object","entries","sorted","sort","a","b","limitToTopTwenty","slice","top1Name","length","top1Count","top2Name","top2Count","top3Name","top3Count","yValues","map","data","xValues","resultData","labels","datasets","backgroundColor","borderColor","options","maintainAspectRatio","legend","display","scales","yAxes","scaleLabel","labelString","fontColor","ticks","xAxes","boxShadow","maxWidth","height","borderRadius","overflow","paddingTop","paddingBotton","color","top1","textAlign","flexDirection","alignItems","top2"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { Bar } from \"react-chartjs-2\";\nimport { Card, Button, Container, Row, Col } from \"react-bootstrap\";\n\nexport default function ShowsCount(props) {\n  const { result } = props;\n\n  //convert data object to arrays\n  const resultsArr = Object.entries(result);\n\n  //sort the data to small to large\n  const sorted = resultsArr.sort((a, b) => a[1] - b[1]);\n\n  //filter only the top 20 most viewed shows/movies\n  const limitToTopTwenty = sorted.slice(-20);\n\n  const top1Name = limitToTopTwenty[limitToTopTwenty.length - 1][0];\n  const top1Count = limitToTopTwenty[limitToTopTwenty.length - 1][1];\n  const top2Name = limitToTopTwenty[limitToTopTwenty.length - 2][0];\n  const top2Count = limitToTopTwenty[limitToTopTwenty.length - 2][1];\n  const top3Name = limitToTopTwenty[limitToTopTwenty.length - 3][0];\n  const top3Count = limitToTopTwenty[limitToTopTwenty.length - 3][1];\n\n  //define yValues & xValues to be used with your chart\n  const yValues = limitToTopTwenty.map((data) => data[1]);\n  const xValues = limitToTopTwenty.map((data) => data[0]);\n\n  //main data set for Graph\n  const resultData = {\n    labels: xValues,\n    datasets: [\n      {\n        data: yValues,\n        backgroundColor: \"rgba(234, 87, 102, 0.6)\",\n        borderColor: \"rgba(234, 87, 102, 0.6)\",\n      },\n    ],\n  };\n\n  //option for Graph\n  const options = {\n    maintainAspectRatio: false,\n    // title: {\n    //   display: true,\n    //   text: \"Your Top Viewed Shows\",\n    //   fontSize: 25,\n    // },\n    legend: {\n      display: false,\n    },\n    scales: {\n      yAxes: [\n        {\n          scaleLabel: {\n            display: true,\n            labelString: \"total view count (per watch event)\",\n            fontColor: \"rgb(224, 228, 228)\",\n          },\n          ticks: {\n            fontColor: \"rgb(224, 228, 228)\",\n          },\n        },\n      ],\n      xAxes: [\n        {\n          scaleLabel: {\n            fontColor: \"rgb(224, 228, 228)\",\n          },\n          ticks: {\n            fontColor: \"rgb(224, 228, 228)\",\n          },\n        },\n      ],\n    },\n  };\n  return (\n    <Card\n      style={{\n        backgroundColor: \"rgb(34, 36, 41)\",\n        boxShadow: \"0 0 6px rgba(0, 0, 0, 0.1)\",\n        // position: \"absolute\",\n        // top: \"50%\",\n        // left: \"50%\",\n        // transform: \"translate(-50%, -50%)\",\n        maxWidth: \"500px\",\n        height: \"375px\",\n        borderRadius: \"10px\",\n        overflow: \"hidden\",\n        paddingTop: \"1em\",\n        paddingBotton: \"2em\",\n        color: \"rgb(224, 228, 228)\",\n      }}\n    >\n      <Card.Title>\n        You watched <strong>{top1}</strong>{\" \"}\n        <span style={{ color: \"red\" }}>{sorted[sorted.length - 1][1]}</span>{\" \"}\n        times!\n      </Card.Title>{\" \"}\n      <Card.Subtitle style={{ textAlign: \"center\" }}>Your Top 3</Card.Subtitle>\n      <ol\n        style={{\n          display: \"flex\",\n          flexDirection: \"column\",\n          alignItems: \"center\",\n          textAlign: \"left\",\n        }}\n      >\n        <li>\n          {top1}: {sorted[sorted.length - 1][1]}\n        </li>\n        <li>\n          {top2} : {sorted[sorted.length - 2][1]}\n        </li>\n        <li>\n          {sorted[sorted.length - 3][0]}: {sorted[sorted.length - 3][1]}\n        </li>\n      </ol>\n      <div>\n        <Bar data={resultData} options={options} width={500} height={400} />\n      </div>\n    </Card>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}