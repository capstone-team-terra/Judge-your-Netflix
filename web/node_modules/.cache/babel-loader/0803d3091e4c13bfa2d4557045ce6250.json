{"ast":null,"code":"var _jsxFileName = \"/Users/Natalie/Desktop/SeniorPhase/Judge-your-Netflix/web/src/components/Sample.js\";\nimport React, { useState } from \"react\";\nimport { Container, Col, Row, Badge, Card } from \"react-bootstrap\";\nimport Typewriter from \"typewriter-effect\";\nimport ShowsCount from \"./resultsComponent/ShowsCount\";\nimport GenresCount from \"./resultsComponent/GenresCount\";\nimport PopularityCount from \"./resultsComponent/PopularityCount\";\nimport RunTime from \"./resultsComponent/RunTime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst showData = {\n  Friends: 300,\n  \"Shutter Island\": 10,\n  \"Criminal Minds\": 100,\n  \"Sherlock Holmes\": 200,\n  \"Pans Labyrinth\": 11,\n  Merlin: 20,\n  \"The Croods\": 1,\n  \"Breaking Bad\": 50\n};\nconst genreData = {\n  Action: 1,\n  Comedy: 1,\n  Fantasy: 2,\n  Animation: 1,\n  Drama: 1,\n  Crime: 3\n};\nconst timeData = {\n  \"2019-10\": 294,\n  \"2019-11\": 598,\n  \"2019-12\": 120,\n  \"2020-01\": 690,\n  \"2020-02\": 50,\n  \"2020-03\": 840,\n  \"2020-04\": 1000,\n  \"2020-05\": 943,\n  \"2020-06\": 240,\n  \"2020-07\": 560,\n  \"2020-08\": 660,\n  \"2020-09\": 493,\n  \"2020-10\": 890,\n  \"2020-11\": 999,\n  \"2020-12\": 34,\n  \"2021-01\": 10,\n  \"2021-02\": 240,\n  \"2021-03\": 190\n};\nconst popularityData = [20, 70, 10];\n\nconst Sample = () => {\n  const [doneTyping, setTypingDone] = useState(false);\n\n  const handleDone = () => {\n    setTypingDone(true);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Container, {\n    className: \"text-center\",\n    children: [/*#__PURE__*/_jsxDEV(Container, {\n      className: \"text-center\",\n      style: {\n        height: \"100vh\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"netflix-red mt-5 mb-5\",\n        children: [\"Your Netflix Analysis \", /*#__PURE__*/_jsxDEV(Badge, {\n          variant: \"warning\",\n          children: \"Example\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 33\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Row, {\n        className: \"justify-content-center\",\n        children: /*#__PURE__*/_jsxDEV(Col, {\n          children: /*#__PURE__*/_jsxDEV(Typewriter, {\n            onInit: typewriter => {\n              typewriter.typeString(\"Analyzing sample data...\").pauseFor(2500).deleteAll().typeString(\"Generating your score...\").pauseFor(2500).deleteAll().typeString(\"Done.\").pauseFor(2500).callFunction(() => {\n                handleDone();\n              }).start();\n            },\n            options: {\n              delay: 50,\n              deleteSpeed: 30\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this), doneTyping && /*#__PURE__*/_jsxDEV(Row, {\n        className: \"justify-content-center mt-5\",\n        children: /*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Your score is 70 !\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Container, {\n      className: \"text-center\",\n      children: [/*#__PURE__*/_jsxDEV(Row, {\n        children: [/*#__PURE__*/_jsxDEV(Col, {\n          md: 6,\n          children: /*#__PURE__*/_jsxDEV(Card, {\n            className: \"text-dark mb-2\",\n            children: [/*#__PURE__*/_jsxDEV(Card.Header, {\n              children: \"Top Shows\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 97,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(ShowsCount, {\n              result: showData\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 98,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Col, {\n          md: 6,\n          children: /*#__PURE__*/_jsxDEV(Card, {\n            className: \"text-dark mb-2\",\n            children: [/*#__PURE__*/_jsxDEV(Card.Header, {\n              children: \"Top Genre\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 103,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(RunTime, {\n              result: timeData\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 104,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Row, {\n        children: [/*#__PURE__*/_jsxDEV(Col, {\n          md: 6,\n          children: /*#__PURE__*/_jsxDEV(Card, {\n            className: \"text-dark mb-2\",\n            children: [/*#__PURE__*/_jsxDEV(Card.Header, {\n              children: \"View Time\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 111,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(GenresCount, {\n              result: genreData\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 112,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 110,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Col, {\n          md: 6,\n          children: /*#__PURE__*/_jsxDEV(Card, {\n            className: \"text-dark mb-2\",\n            children: [/*#__PURE__*/_jsxDEV(Card.Header, {\n              children: \"Popularity\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 117,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(PopularityCount, {\n              result: popularityData\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 118,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 116,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 5\n  }, this);\n};\n\nexport default Sample;","map":{"version":3,"sources":["/Users/Natalie/Desktop/SeniorPhase/Judge-your-Netflix/web/src/components/Sample.js"],"names":["React","useState","Container","Col","Row","Badge","Card","Typewriter","ShowsCount","GenresCount","PopularityCount","RunTime","showData","Friends","Merlin","genreData","Action","Comedy","Fantasy","Animation","Drama","Crime","timeData","popularityData","Sample","doneTyping","setTypingDone","handleDone","height","typewriter","typeString","pauseFor","deleteAll","callFunction","start","delay","deleteSpeed"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport { Container, Col, Row, Badge, Card } from \"react-bootstrap\";\nimport Typewriter from \"typewriter-effect\";\nimport ShowsCount from \"./resultsComponent/ShowsCount\";\nimport GenresCount from \"./resultsComponent/GenresCount\";\nimport PopularityCount from \"./resultsComponent/PopularityCount\";\nimport RunTime from \"./resultsComponent/RunTime\";\n\nconst showData = {\n  Friends: 300,\n  \"Shutter Island\": 10,\n  \"Criminal Minds\": 100,\n  \"Sherlock Holmes\": 200,\n  \"Pans Labyrinth\": 11,\n  Merlin: 20,\n  \"The Croods\": 1,\n  \"Breaking Bad\": 50,\n};\nconst genreData = {\n  Action: 1,\n  Comedy: 1,\n  Fantasy: 2,\n  Animation: 1,\n  Drama: 1,\n  Crime: 3,\n};\n\nconst timeData = {\n  \"2019-10\": 294,\n  \"2019-11\": 598,\n  \"2019-12\": 120,\n  \"2020-01\": 690,\n  \"2020-02\": 50,\n  \"2020-03\": 840,\n  \"2020-04\": 1000,\n  \"2020-05\": 943,\n  \"2020-06\": 240,\n  \"2020-07\": 560,\n  \"2020-08\": 660,\n  \"2020-09\": 493,\n  \"2020-10\": 890,\n  \"2020-11\": 999,\n  \"2020-12\": 34,\n  \"2021-01\": 10,\n  \"2021-02\": 240,\n  \"2021-03\": 190,\n};\nconst popularityData = [20, 70, 10];\n\nconst Sample = () => {\n  const [doneTyping, setTypingDone] = useState(false);\n\n  const handleDone = () => {\n    setTypingDone(true);\n  };\n  return (\n    <Container className=\"text-center\">\n      <Container className=\"text-center\" style={{ height: \"100vh\" }}>\n        <h1 className=\"netflix-red mt-5 mb-5\">\n          Your Netflix Analysis <Badge variant=\"warning\">Example</Badge>\n        </h1>\n        <Row className=\"justify-content-center\">\n          <Col>\n            <Typewriter\n              onInit={(typewriter) => {\n                typewriter\n                  .typeString(\"Analyzing sample data...\")\n                  .pauseFor(2500)\n                  .deleteAll()\n                  .typeString(\"Generating your score...\")\n                  .pauseFor(2500)\n                  .deleteAll()\n                  .typeString(\"Done.\")\n                  .pauseFor(2500)\n                  .callFunction(() => {\n                    handleDone();\n                  })\n                  .start();\n              }}\n              options={{\n                delay: 50,\n                deleteSpeed: 30,\n              }}\n            />\n          </Col>\n        </Row>\n        {doneTyping && (\n          <Row className=\"justify-content-center mt-5\">\n            <h2>Your score is 70 !</h2>\n          </Row>\n        )}\n      </Container>\n      <Container className=\"text-center\">\n        <Row>\n          <Col md={6}>\n            <Card className=\"text-dark mb-2\">\n              <Card.Header>Top Shows</Card.Header>\n              <ShowsCount result={showData} />\n            </Card>\n          </Col>\n          <Col md={6}>\n            <Card className=\"text-dark mb-2\">\n              <Card.Header>Top Genre</Card.Header>\n              <RunTime result={timeData} />\n            </Card>\n          </Col>\n        </Row>\n        <Row>\n          <Col md={6}>\n            <Card className=\"text-dark mb-2\">\n              <Card.Header>View Time</Card.Header>\n              <GenresCount result={genreData} />\n            </Card>\n          </Col>\n          <Col md={6}>\n            <Card className=\"text-dark mb-2\">\n              <Card.Header>Popularity</Card.Header>\n              <PopularityCount result={popularityData} />\n            </Card>\n          </Col>\n        </Row>\n      </Container>\n    </Container>\n  );\n};\n\nexport default Sample;\n"]},"metadata":{},"sourceType":"module"}