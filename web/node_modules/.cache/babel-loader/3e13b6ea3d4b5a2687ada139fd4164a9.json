{"ast":null,"code":"var _jsxFileName = \"/Users/Natalie/Desktop/SeniorPhase/Judge-your-Netflix/web/src/components/GetStarted.js\";\nimport React, { useState } from \"react\";\nimport { Button, Container, Row, Col } from \"react-bootstrap\";\nimport UploadPage from \"./UploadPage\";\nimport Sample from \"./Sample\";\nimport Typewriter from \"typewriter-effect\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst GetStarted = () => {\n  const [showInstruction, setShowInstruction] = useState(false);\n  const [no, setNo] = useState(false);\n  const [showSample, setShowSample] = useState(false);\n  const [okButtonDisplay, setOkButtonDisplay] = useState(\"inline\");\n  const [noButtonColor, setNoButtonColor] = useState(\"outline-light\");\n  const [typingDone1, setTypingDone1] = useState(false);\n  const [typingDone2, setTypingDone2] = useState(false);\n\n  const handleOkButton = () => {\n    setShowInstruction(true);\n  };\n\n  const handleNoButton = () => {\n    setNo(true);\n    setOkButtonDisplay(\"none\");\n    setNoButtonColor(\"dark\");\n  };\n\n  const handleSampleButton = () => {\n    setShowSample(true);\n  };\n\n  const handleDoneTyping1 = () => {\n    setTypingDone1(true);\n  };\n\n  const handleDoneTyping2 = () => {\n    setTypingDone2(true);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: showInstruction ? /*#__PURE__*/_jsxDEV(UploadPage, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 9\n    }, this) : showSample ? /*#__PURE__*/_jsxDEV(Sample, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(Container, {\n      className: \"text-left\",\n      children: [/*#__PURE__*/_jsxDEV(Row, {\n        className: \"mb-1\",\n        children: /*#__PURE__*/_jsxDEV(Typewriter, {\n          onInit: typewriter => {\n            typewriter.typeString(\"To get started, I will need to see your Netflix viewing history.\").pauseFor(1500).callFunction(() => {\n              handleDoneTyping1();\n            }).start();\n          },\n          options: {\n            delay: 50\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 11\n      }, this), typingDone1 && /*#__PURE__*/_jsxDEV(Row, {\n        className: \"mb-3\",\n        children: [/*#__PURE__*/_jsxDEV(Col, {\n          md: 12,\n          className: \"mt-3 mb-3\",\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"outline-light\",\n            onClick: handleOkButton,\n            style: {\n              display: okButtonDisplay\n            },\n            children: \"Ok, Got it\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(Col, {\n          md: 12,\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            variant: noButtonColor,\n            onClick: handleNoButton,\n            children: \"No I don't want to share my view history\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 13\n      }, this), no && /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(Typewriter, {\n          onInit: typewriter => {\n            typewriter.typeString(\"hmmm, I can't judge your Netflix without seeing your view history. <br /> If you really don't want to, you can check out our analysis based on sample data.\").pauseFor(1500).callFunction(() => {\n              handleDoneTyping2();\n            }).start();\n          },\n          options: {\n            delay: 50\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 15\n        }, this), typingDone2 && /*#__PURE__*/_jsxDEV(Row, {\n          children: [/*#__PURE__*/_jsxDEV(Col, {\n            md: 12,\n            className: \"mt-3 mb-3\",\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              variant: \"outline-light\",\n              onClick: handleOkButton,\n              children: \"Ok, fine. I will share my view history.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 103,\n              columnNumber: 21\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(Col, {\n            md: 12,\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              variant: \"outline-light\",\n              className: \"mb-5\",\n              onClick: handleSampleButton,\n              children: \"No, show me your sample analysis first.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 108,\n              columnNumber: 21\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 19\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, this);\n};\n\nexport default GetStarted;","map":{"version":3,"sources":["/Users/Natalie/Desktop/SeniorPhase/Judge-your-Netflix/web/src/components/GetStarted.js"],"names":["React","useState","Button","Container","Row","Col","UploadPage","Sample","Typewriter","GetStarted","showInstruction","setShowInstruction","no","setNo","showSample","setShowSample","okButtonDisplay","setOkButtonDisplay","noButtonColor","setNoButtonColor","typingDone1","setTypingDone1","typingDone2","setTypingDone2","handleOkButton","handleNoButton","handleSampleButton","handleDoneTyping1","handleDoneTyping2","typewriter","typeString","pauseFor","callFunction","start","delay","display"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport { Button, Container, Row, Col } from \"react-bootstrap\";\nimport UploadPage from \"./UploadPage\";\nimport Sample from \"./Sample\";\nimport Typewriter from \"typewriter-effect\";\n\nconst GetStarted = () => {\n  const [showInstruction, setShowInstruction] = useState(false);\n  const [no, setNo] = useState(false);\n  const [showSample, setShowSample] = useState(false);\n  const [okButtonDisplay, setOkButtonDisplay] = useState(\"inline\");\n  const [noButtonColor, setNoButtonColor] = useState(\"outline-light\");\n\n  const [typingDone1, setTypingDone1] = useState(false);\n  const [typingDone2, setTypingDone2] = useState(false);\n\n  const handleOkButton = () => {\n    setShowInstruction(true);\n  };\n\n  const handleNoButton = () => {\n    setNo(true);\n    setOkButtonDisplay(\"none\");\n    setNoButtonColor(\"dark\");\n  };\n\n  const handleSampleButton = () => {\n    setShowSample(true);\n  };\n\n  const handleDoneTyping1 = () => {\n    setTypingDone1(true);\n  };\n  const handleDoneTyping2 = () => {\n    setTypingDone2(true);\n  };\n\n  return (\n    <div>\n      {showInstruction ? (\n        <UploadPage />\n      ) : showSample ? (\n        <Sample />\n      ) : (\n        <Container className=\"text-left\">\n          <Row className=\"mb-1\">\n            <Typewriter\n              onInit={(typewriter) => {\n                typewriter\n                  .typeString(\n                    \"To get started, I will need to see your Netflix viewing history.\"\n                  )\n                  .pauseFor(1500)\n                  .callFunction(() => {\n                    handleDoneTyping1();\n                  })\n                  .start();\n              }}\n              options={{\n                delay: 50,\n              }}\n            />\n          </Row>\n          {typingDone1 && (\n            <Row className=\"mb-3\">\n              <Col md={12} className=\"mt-3 mb-3\">\n                <Button\n                  variant=\"outline-light\"\n                  onClick={handleOkButton}\n                  style={{ display: okButtonDisplay }}\n                >\n                  Ok, Got it\n                </Button>\n              </Col>\n              <Col md={12}>\n                <Button variant={noButtonColor} onClick={handleNoButton}>\n                  No I don't want to share my view history\n                </Button>\n              </Col>\n            </Row>\n          )}\n          {no && (\n            <div>\n              <Typewriter\n                onInit={(typewriter) => {\n                  typewriter\n                    .typeString(\n                      \"hmmm, I can't judge your Netflix without seeing your view history. <br /> If you really don't want to, you can check out our analysis based on sample data.\"\n                    )\n                    .pauseFor(1500)\n                    .callFunction(() => {\n                      handleDoneTyping2();\n                    })\n                    .start();\n                }}\n                options={{\n                  delay: 50,\n                }}\n              />\n              {typingDone2 && (\n                <Row>\n                  <Col md={12} className=\"mt-3 mb-3\">\n                    <Button variant=\"outline-light\" onClick={handleOkButton}>\n                      Ok, fine. I will share my view history.\n                    </Button>\n                  </Col>\n                  <Col md={12}>\n                    <Button\n                      variant=\"outline-light\"\n                      className=\"mb-5\"\n                      onClick={handleSampleButton}\n                    >\n                      No, show me your sample analysis first.\n                    </Button>\n                  </Col>\n                </Row>\n              )}\n            </div>\n          )}\n        </Container>\n      )}\n    </div>\n  );\n};\n\nexport default GetStarted;\n"]},"metadata":{},"sourceType":"module"}