{"ast":null,"code":"var _jsxFileName = \"/Users/Natalie/Desktop/SeniorPhase/Judge-your-Netflix/web/src/components/resultsComponent/GenresCount.js\";\nimport React from \"react\";\nimport { Pie } from \"react-chartjs-2\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function GenresCount(props) {\n  const {\n    result\n  } = props;\n  const resultsArr = Object.entries(result); //sort the data to large to small\n\n  const allSorted = resultsArr.sort((a, b) => b[1] - a[1]);\n  const sorted = allSorted.slice(0, 5); //define yValues & xValues to be used with your chart\n\n  const numArr = sorted.map(data => data[1]);\n  const genresArr = sorted.map(data => data[0]);\n  const state = {\n    labels: genresArr,\n    datasets: [{\n      label: \"Watches\",\n      backgroundColor: [\"#336699\", \"#99CCFF\", \"#999933\", \"#666699\", \"#CC9933\", \"#006666\", \"#3399FF\", \"#993300\", \"#CCCC99\", \"#666666\", \"#FFCC66\", \"#6699CC\", \"#663366\", \"#9999CC\", \"#CCCCCC\", \"#669999\", \"#CCCC66\", \"#CC6600\", \"#9999FF\", \"#0066CC\", \"#99CCCC\"],\n      data: numArr\n    }]\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: sorted.length !== 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: [\"Hmm.... You watched \", sorted[0][1], \" \", sorted[0][0], \" shows...\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(Pie, {\n          data: state,\n          options: {\n            title: {\n              display: true,\n              text: \"Your Top Genres\",\n              fontSize: 20\n            },\n            legend: {\n              display: true\n            }\n          },\n          width: 600,\n          height: 400\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"No genres data\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 5\n  }, this);\n}","map":{"version":3,"sources":["/Users/Natalie/Desktop/SeniorPhase/Judge-your-Netflix/web/src/components/resultsComponent/GenresCount.js"],"names":["React","Pie","GenresCount","props","result","resultsArr","Object","entries","allSorted","sort","a","b","sorted","slice","numArr","map","data","genresArr","state","labels","datasets","label","backgroundColor","length","title","display","text","fontSize","legend"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,GAAT,QAAoB,iBAApB;;AAEA,eAAe,SAASC,WAAT,CAAqBC,KAArB,EAA4B;AACzC,QAAM;AAAEC,IAAAA;AAAF,MAAaD,KAAnB;AACA,QAAME,UAAU,GAAGC,MAAM,CAACC,OAAP,CAAeH,MAAf,CAAnB,CAFyC,CAIzC;;AACA,QAAMI,SAAS,GAAGH,UAAU,CAACI,IAAX,CAAgB,CAACC,CAAD,EAAIC,CAAJ,KAAUA,CAAC,CAAC,CAAD,CAAD,GAAOD,CAAC,CAAC,CAAD,CAAlC,CAAlB;AACA,QAAME,MAAM,GAAGJ,SAAS,CAACK,KAAV,CAAgB,CAAhB,EAAmB,CAAnB,CAAf,CANyC,CAOzC;;AACA,QAAMC,MAAM,GAAGF,MAAM,CAACG,GAAP,CAAYC,IAAD,IAAUA,IAAI,CAAC,CAAD,CAAzB,CAAf;AACA,QAAMC,SAAS,GAAGL,MAAM,CAACG,GAAP,CAAYC,IAAD,IAAUA,IAAI,CAAC,CAAD,CAAzB,CAAlB;AAEA,QAAME,KAAK,GAAG;AACZC,IAAAA,MAAM,EAAEF,SADI;AAEZG,IAAAA,QAAQ,EAAE,CACR;AACEC,MAAAA,KAAK,EAAE,SADT;AAEEC,MAAAA,eAAe,EAAE,CACf,SADe,EAEf,SAFe,EAGf,SAHe,EAIf,SAJe,EAKf,SALe,EAMf,SANe,EAOf,SAPe,EAQf,SARe,EASf,SATe,EAUf,SAVe,EAWf,SAXe,EAYf,SAZe,EAaf,SAbe,EAcf,SAde,EAef,SAfe,EAgBf,SAhBe,EAiBf,SAjBe,EAkBf,SAlBe,EAmBf,SAnBe,EAoBf,SApBe,EAqBf,SArBe,CAFnB;AAyBEN,MAAAA,IAAI,EAAEF;AAzBR,KADQ;AAFE,GAAd;AAgCA,sBACE;AAAA,cACGF,MAAM,CAACW,MAAP,KAAkB,CAAlB,gBACC;AAAA,8BACE;AAAA,2CACuBX,MAAM,CAAC,CAAD,CAAN,CAAU,CAAV,CADvB,OACsCA,MAAM,CAAC,CAAD,CAAN,CAAU,CAAV,CADtC;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAIE;AAAA,+BACE,QAAC,GAAD;AACE,UAAA,IAAI,EAAEM,KADR;AAEE,UAAA,OAAO,EAAE;AACPM,YAAAA,KAAK,EAAE;AACLC,cAAAA,OAAO,EAAE,IADJ;AAELC,cAAAA,IAAI,EAAE,iBAFD;AAGLC,cAAAA,QAAQ,EAAE;AAHL,aADA;AAMPC,YAAAA,MAAM,EAAE;AACNH,cAAAA,OAAO,EAAE;AADH;AAND,WAFX;AAYE,UAAA,KAAK,EAAE,GAZT;AAaE,UAAA,MAAM,EAAE;AAbV;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cAJF;AAAA;AAAA;AAAA;AAAA;AAAA,YADD,gBAwBC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAzBJ;AAAA;AAAA;AAAA;AAAA,UADF;AA8BD","sourcesContent":["import React from \"react\";\nimport { Pie } from \"react-chartjs-2\";\n\nexport default function GenresCount(props) {\n  const { result } = props;\n  const resultsArr = Object.entries(result);\n\n  //sort the data to large to small\n  const allSorted = resultsArr.sort((a, b) => b[1] - a[1]);\n  const sorted = allSorted.slice(0, 5);\n  //define yValues & xValues to be used with your chart\n  const numArr = sorted.map((data) => data[1]);\n  const genresArr = sorted.map((data) => data[0]);\n\n  const state = {\n    labels: genresArr,\n    datasets: [\n      {\n        label: \"Watches\",\n        backgroundColor: [\n          \"#336699\",\n          \"#99CCFF\",\n          \"#999933\",\n          \"#666699\",\n          \"#CC9933\",\n          \"#006666\",\n          \"#3399FF\",\n          \"#993300\",\n          \"#CCCC99\",\n          \"#666666\",\n          \"#FFCC66\",\n          \"#6699CC\",\n          \"#663366\",\n          \"#9999CC\",\n          \"#CCCCCC\",\n          \"#669999\",\n          \"#CCCC66\",\n          \"#CC6600\",\n          \"#9999FF\",\n          \"#0066CC\",\n          \"#99CCCC\",\n        ],\n        data: numArr,\n      },\n    ],\n  };\n  return (\n    <div>\n      {sorted.length !== 0 ? (\n        <div>\n          <h2>\n            Hmm.... You watched {sorted[0][1]} {sorted[0][0]} shows...\n          </h2>\n          <div>\n            <Pie\n              data={state}\n              options={{\n                title: {\n                  display: true,\n                  text: \"Your Top Genres\",\n                  fontSize: 20,\n                },\n                legend: {\n                  display: true,\n                },\n              }}\n              width={600}\n              height={400}\n            />\n          </div>\n        </div>\n      ) : (\n        <div>No genres data</div>\n      )}\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}