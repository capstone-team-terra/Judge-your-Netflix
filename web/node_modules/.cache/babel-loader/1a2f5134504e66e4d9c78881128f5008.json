{"ast":null,"code":"var _jsxFileName = \"/Users/Natalie/Desktop/SeniorPhase/Judge-your-Netflix/web/src/components/resultsComponent/ShowsCount.js\";\nimport React from \"react\";\nimport { Bar } from \"react-chartjs-2\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function ShowsCount(props) {\n  const {\n    result\n  } = props;\n  console.log(\"RESULT\", result); //convert data object to arrays\n\n  const resultsArr = Object.entries(result); //filter only view count with more than 10\n\n  const moreThanTen = resultsArr.filter(data => data[1] > 10); //sort the data to small to large\n\n  const sorted = moreThanTen.sort((a, b) => a[1] - b[1]); //define yValues & xValues to be used with your chart\n\n  const yValues = sorted.map(data => data[1]);\n  const xValues = sorted.map(data => data[0]); //main data set for Graph\n\n  const resultData = {\n    labels: xValues,\n    datasets: [{\n      labels: \"Your Views\",\n      data: yValues,\n      backgroundColor: \"rgba(234, 87, 102, 0.6)\",\n      borderColor: \"rgba(234, 87, 102, 0.6)\"\n    }]\n  }; //option for Graph\n\n  const options = {\n    maintainAspectRatio: false,\n    title: {\n      display: true,\n      text: \"View Count per Show \",\n      fontSize: 25\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: sorted.length !== 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: [\"You watched\", \" \", /*#__PURE__*/_jsxDEV(\"span\", {\n          style: {\n            color: \"blue\"\n          },\n          children: [\"\\\"\", sorted[sorted.length - 1][0], \"\\\"\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 13\n        }, this), \" \", /*#__PURE__*/_jsxDEV(\"span\", {\n          style: {\n            color: \"red\"\n          },\n          children: sorted[sorted.length - 1][1]\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 13\n        }, this), \" \", \"times!\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        style: {\n          textAlign: \"center\"\n        },\n        children: \"Top 3 Results\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"ol\", {\n        style: {\n          display: \"flex\",\n          flexDirection: \"column\",\n          alignItems: \"center\",\n          textAlign: \"left\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"li\", {\n          children: [sorted[sorted.length - 1][0], \": \", sorted[sorted.length - 1][1]]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [sorted[sorted.length - 2][0], \" : \", sorted[sorted.length - 2][1]]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [sorted[sorted.length - 3][0], \": \", sorted[sorted.length - 3][1]]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(Bar, {\n          data: resultData,\n          options: options,\n          width: 800,\n          height: 600\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"data error\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 5\n  }, this);\n}","map":{"version":3,"sources":["/Users/Natalie/Desktop/SeniorPhase/Judge-your-Netflix/web/src/components/resultsComponent/ShowsCount.js"],"names":["React","Bar","ShowsCount","props","result","console","log","resultsArr","Object","entries","moreThanTen","filter","data","sorted","sort","a","b","yValues","map","xValues","resultData","labels","datasets","backgroundColor","borderColor","options","maintainAspectRatio","title","display","text","fontSize","length","color","textAlign","flexDirection","alignItems"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { Bar } from \"react-chartjs-2\";\n\nexport default function ShowsCount(props) {\n  const { result } = props;\n\n  console.log(\"RESULT\", result);\n  //convert data object to arrays\n  const resultsArr = Object.entries(result);\n\n  //filter only view count with more than 10\n  const moreThanTen = resultsArr.filter((data) => data[1] > 10);\n\n  //sort the data to small to large\n  const sorted = moreThanTen.sort((a, b) => a[1] - b[1]);\n  //define yValues & xValues to be used with your chart\n  const yValues = sorted.map((data) => data[1]);\n  const xValues = sorted.map((data) => data[0]);\n\n  //main data set for Graph\n  const resultData = {\n    labels: xValues,\n    datasets: [\n      {\n        labels: \"Your Views\",\n        data: yValues,\n        backgroundColor: \"rgba(234, 87, 102, 0.6)\",\n        borderColor: \"rgba(234, 87, 102, 0.6)\",\n      },\n    ],\n  };\n\n  //option for Graph\n  const options = {\n    maintainAspectRatio: false,\n    title: {\n      display: true,\n      text: \"View Count per Show \",\n      fontSize: 25,\n    },\n  };\n  return (\n    <div>\n      {sorted.length !== 0 ? (\n        <div>\n          <h2>\n            You watched{\" \"}\n            <span style={{ color: \"blue\" }}>\n              \"{sorted[sorted.length - 1][0]}\"\n            </span>{\" \"}\n            <span style={{ color: \"red\" }}>{sorted[sorted.length - 1][1]}</span>{\" \"}\n            times!\n          </h2>\n          <h3 style={{ textAlign: \"center\" }}>Top 3 Results</h3>\n          <ol\n            style={{\n              display: \"flex\",\n              flexDirection: \"column\",\n              alignItems: \"center\",\n              textAlign: \"left\",\n            }}\n          >\n            <li>\n              {sorted[sorted.length - 1][0]}: {sorted[sorted.length - 1][1]}\n            </li>\n            <li>\n              {sorted[sorted.length - 2][0]} : {sorted[sorted.length - 2][1]}\n            </li>\n            <li>\n              {sorted[sorted.length - 3][0]}: {sorted[sorted.length - 3][1]}\n            </li>\n          </ol>\n          <div>\n            <Bar data={resultData} options={options} width={800} height={600} />\n          </div>\n        </div>\n      ) : (\n        <div>data error</div>\n      )}\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}