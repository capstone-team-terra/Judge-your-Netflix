{"ast":null,"code":"var _jsxFileName = \"/Users/Natalie/Desktop/SeniorPhase/Judge-your-Netflix/web/src/components/resultsComponent/ShowsCount.js\";\nimport React from \"react\";\nimport { HorizontalBar } from \"react-chartjs-2\";\nimport { Card } from \"react-bootstrap\";\nimport \"./charts.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function ShowsCount(props) {\n  const {\n    result\n  } = props; //convert data object to arrays\n\n  const resultsArr = Object.entries(result); //sort the data to small to large\n\n  const sorted = resultsArr.sort((a, b) => b[1] - a[1]); //filter only the top 20 most viewed shows/movies\n\n  const limitToTopFive = sorted.slice(0, 5);\n  const top1Name = limitToTopFive[0][0];\n  const top1Count = limitToTopFive[0][1]; //define yValues & xValues to be used with your chart\n\n  const yValues = limitToTopFive.map(data => data[1]);\n  const xValues = limitToTopFive.map(data => data[0]); //main data set for Graph\n\n  const resultData = {\n    labels: xValues,\n    datasets: [{\n      data: yValues,\n      backgroundColor: \"rgba(234, 87, 102, 0.6)\"\n    }]\n  }; //option for Graph\n\n  const options = {\n    maintainAspectRatio: false,\n    legend: {\n      display: false\n    },\n    layout: {\n      padding: {\n        top: 10\n      }\n    },\n    scales: {\n      yAxes: [{\n        scaleLabel: {\n          fontColor: \"rgb(224, 228, 228)\"\n        },\n        ticks: {\n          fontColor: \"rgb(224, 228, 228)\",\n          fontSize: 15\n        }\n      }],\n      xAxes: [{\n        scaleLabel: {\n          display: true,\n          labelString: \"Total view count (per watch event)\",\n          fontColor: \"rgb(224, 228, 228)\",\n          fontSize: 15\n        },\n        ticks: {\n          fontColor: \"rgb(224, 228, 228)\",\n          fontSize: 15\n        }\n      }]\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Card, {\n    style: {\n      background: \"rgb(34, 36, 41)\",\n      boxShadow: \"0px 0px 10px 5px rgba(100, 100, 100, .3)\",\n      maxWidth: \"600px\",\n      height: \"690px\",\n      borderRadius: \"10px\",\n      overflow: \"hidden\",\n      padding: \"2em\",\n      margin: \"1em\",\n      color: \"rgb(224, 228, 228)\",\n      display: \"flex\",\n      justifyContent: \"space-around\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(Card.Title, {\n      style: {\n        textAlign: \"center\",\n        fontSize: 30\n      },\n      children: \"Your top 5 most viewed shows\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(HorizontalBar, {\n        data: resultData,\n        options: options,\n        width: 600,\n        height: 400\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        fontSize: \"20px\",\n        fontStyle: \"italic\"\n      },\n      children: [\"Your most viewed show was \", /*#__PURE__*/_jsxDEV(\"strong\", {\n        children: top1Name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 35\n      }, this), \" and you watched it\", /*#__PURE__*/_jsxDEV(\"span\", {\n        style: {\n          color: \"rgba(234, 87, 102)\"\n        },\n        children: [\" \", top1Count]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 9\n      }, this), \" times ! Wow.\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 76,\n    columnNumber: 5\n  }, this);\n}","map":{"version":3,"sources":["/Users/Natalie/Desktop/SeniorPhase/Judge-your-Netflix/web/src/components/resultsComponent/ShowsCount.js"],"names":["React","HorizontalBar","Card","ShowsCount","props","result","resultsArr","Object","entries","sorted","sort","a","b","limitToTopFive","slice","top1Name","top1Count","yValues","map","data","xValues","resultData","labels","datasets","backgroundColor","options","maintainAspectRatio","legend","display","layout","padding","top","scales","yAxes","scaleLabel","fontColor","ticks","fontSize","xAxes","labelString","background","boxShadow","maxWidth","height","borderRadius","overflow","margin","color","justifyContent","textAlign","fontStyle"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { HorizontalBar } from \"react-chartjs-2\";\nimport { Card } from \"react-bootstrap\";\nimport \"./charts.css\";\n\nexport default function ShowsCount(props) {\n  const { result } = props;\n\n  //convert data object to arrays\n  const resultsArr = Object.entries(result);\n\n  //sort the data to small to large\n  const sorted = resultsArr.sort((a, b) => b[1] - a[1]);\n\n  //filter only the top 20 most viewed shows/movies\n  const limitToTopFive = sorted.slice(0, 5);\n\n  const top1Name = limitToTopFive[0][0];\n  const top1Count = limitToTopFive[0][1];\n\n  //define yValues & xValues to be used with your chart\n  const yValues = limitToTopFive.map((data) => data[1]);\n  const xValues = limitToTopFive.map((data) => data[0]);\n\n  //main data set for Graph\n  const resultData = {\n    labels: xValues,\n    datasets: [\n      {\n        data: yValues,\n        backgroundColor: \"rgba(234, 87, 102, 0.6)\",\n      },\n    ],\n  };\n\n  //option for Graph\n  const options = {\n    maintainAspectRatio: false,\n    legend: {\n      display: false,\n    },\n    layout: {\n      padding: {\n        top: 10,\n      },\n    },\n    scales: {\n      yAxes: [\n        {\n          scaleLabel: {\n            fontColor: \"rgb(224, 228, 228)\",\n          },\n          ticks: {\n            fontColor: \"rgb(224, 228, 228)\",\n            fontSize: 15,\n          },\n        },\n      ],\n      xAxes: [\n        {\n          scaleLabel: {\n            display: true,\n            labelString: \"Total view count (per watch event)\",\n            fontColor: \"rgb(224, 228, 228)\",\n            fontSize: 15,\n          },\n          ticks: {\n            fontColor: \"rgb(224, 228, 228)\",\n            fontSize: 15,\n          },\n        },\n      ],\n    },\n  };\n  return (\n    <Card\n      style={{\n        background: \"rgb(34, 36, 41)\",\n        boxShadow: \"0px 0px 10px 5px rgba(100, 100, 100, .3)\",\n        maxWidth: \"600px\",\n        height: \"690px\",\n        borderRadius: \"10px\",\n        overflow: \"hidden\",\n        padding: \"2em\",\n        margin: \"1em\",\n        color: \"rgb(224, 228, 228)\",\n        display: \"flex\",\n        justifyContent: \"space-around\",\n      }}\n    >\n      <Card.Title style={{ textAlign: \"center\", fontSize: 30 }}>\n        Your top 5 most viewed shows\n      </Card.Title>\n      <div>\n        <HorizontalBar\n          data={resultData}\n          options={options}\n          width={600}\n          height={400}\n        />\n      </div>\n      <p style={{ fontSize: \"20px\", fontStyle: \"italic\" }}>\n        Your most viewed show was <strong>{top1Name}</strong> and you watched it\n        <span style={{ color: \"rgba(234, 87, 102)\" }}> {top1Count}</span> times\n        ! Wow.\n      </p>\n    </Card>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}