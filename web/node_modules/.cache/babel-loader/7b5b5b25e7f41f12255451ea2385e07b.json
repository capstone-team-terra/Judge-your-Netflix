{"ast":null,"code":"var _jsxFileName = \"/Users/Natalie/Desktop/SeniorPhase/Judge-your-Netflix/web/src/components/resultsComponent/RunTime.js\";\nimport React from \"react\";\nimport { Line } from \"react-chartjs-2\";\nimport moment from \"moment\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function RunTime(props) {\n  const {\n    result\n  } = props; //convert data object to arrays\n\n  const resultsArr = Object.entries(result); //total view time\n\n  const sumMin = Object.keys(result).reduce((acc, key) => acc + result[key], 0);\n  const sumHrs = Math.ceil(sumMin / 60);\n  const sumDays = Math.ceil(sumHrs / 24);\n  const sumMonth = Math.ceil(sumDays / 30);\n  const sumYear = Math.ceil(sumMonth / 12); //define yValues & xValues to be used with your chart\n\n  const xValues = resultsArr.map(data => moment(data[0]).format(\"MMM YYYY\"));\n  const yValues = resultsArr.map(data => Math.ceil(data[1] / 60)); //main data set for Graph\n\n  const resultData = {\n    labels: xValues,\n    datasets: [{\n      labels: \"Total watch time (in minutes) per month\",\n      data: yValues,\n      backgroundColor: \"rgba(87, 20, 200, 0.6)\",\n      borderColor: \"rgba(87, 20, 200, 0.6)\",\n      pointHoverRadius: 20,\n      pointHoverBorderWidth: 5\n    }]\n  }; //option for Graph\n\n  const options = {\n    maintainAspectRatio: false,\n    title: {\n      display: true,\n      text: \"Your run time History\",\n      fontSize: 25\n    },\n    scales: {\n      yAxes: [{\n        scaleLabel: {\n          display: true,\n          labelString: \"total view time (hours)\"\n        }\n      }]\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: [\"You watched total of \", /*#__PURE__*/_jsxDEV(\"span\", {\n        style: {\n          color: \"red\"\n        },\n        children: sumHrs\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 30\n      }, this), \" \", \"hours worth of Netflix shows since you signed up....\", \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"That is about \", /*#__PURE__*/_jsxDEV(\"span\", {\n        style: {\n          color: \"red\"\n        },\n        children: sumDays\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 23\n      }, this), \" days....\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Or,\", /*#__PURE__*/_jsxDEV(\"span\", {\n        style: {\n          color: \"red\"\n        },\n        children: sumMonth\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this), \" months....\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Or,\", /*#__PURE__*/_jsxDEV(\"span\", {\n        style: {\n          color: \"red\"\n        },\n        children: sumYear\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this), \" years....\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(Line, {\n        data: resultData,\n        options: options,\n        width: 600,\n        height: 400\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 5\n  }, this);\n}","map":{"version":3,"sources":["/Users/Natalie/Desktop/SeniorPhase/Judge-your-Netflix/web/src/components/resultsComponent/RunTime.js"],"names":["React","Line","moment","RunTime","props","result","resultsArr","Object","entries","sumMin","keys","reduce","acc","key","sumHrs","Math","ceil","sumDays","sumMonth","sumYear","xValues","map","data","format","yValues","resultData","labels","datasets","backgroundColor","borderColor","pointHoverRadius","pointHoverBorderWidth","options","maintainAspectRatio","title","display","text","fontSize","scales","yAxes","scaleLabel","labelString","color"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { Line } from \"react-chartjs-2\";\nimport moment from \"moment\";\n\nexport default function RunTime(props) {\n  const { result } = props;\n\n  //convert data object to arrays\n  const resultsArr = Object.entries(result);\n\n  //total view time\n  const sumMin = Object.keys(result).reduce((acc, key) => acc + result[key], 0);\n  const sumHrs = Math.ceil(sumMin / 60);\n  const sumDays = Math.ceil(sumHrs / 24);\n  const sumMonth = Math.ceil(sumDays / 30);\n  const sumYear = Math.ceil(sumMonth / 12);\n\n  //define yValues & xValues to be used with your chart\n  const xValues = resultsArr.map((data) => moment(data[0]).format(\"MMM YYYY\"));\n  const yValues = resultsArr.map((data) => Math.ceil(data[1] / 60));\n\n  //main data set for Graph\n  const resultData = {\n    labels: xValues,\n    datasets: [\n      {\n        labels: \"Total watch time (in minutes) per month\",\n        data: yValues,\n        backgroundColor: \"rgba(87, 20, 200, 0.6)\",\n        borderColor: \"rgba(87, 20, 200, 0.6)\",\n        pointHoverRadius: 20,\n        pointHoverBorderWidth: 5,\n      },\n    ],\n  };\n\n  //option for Graph\n  const options = {\n    maintainAspectRatio: false,\n    title: {\n      display: true,\n      text: \"Your run time History\",\n      fontSize: 25,\n    },\n    scales: {\n      yAxes: [\n        {\n          scaleLabel: {\n            display: true,\n            labelString: \"total view time (hours)\",\n          },\n        },\n      ],\n    },\n  };\n  return (\n    <div>\n      <h3>\n        You watched total of <span style={{ color: \"red\" }}>{sumHrs}</span>{\" \"}\n        hours worth of Netflix shows since you signed up....{\" \"}\n      </h3>\n      <p>\n        That is about <span style={{ color: \"red\" }}>{sumDays}</span> days....\n      </p>\n      <p>\n        Or,\n        <span style={{ color: \"red\" }}>{sumMonth}</span> months....\n      </p>\n      <p>\n        Or,\n        <span style={{ color: \"red\" }}>{sumYear}</span> years....\n      </p>\n      <div>\n        <Line data={resultData} options={options} width={600} height={400} />\n      </div>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}