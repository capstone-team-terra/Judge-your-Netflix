{"ast":null,"code":"var _jsxFileName = \"/Users/Natalie/Desktop/SeniorPhase/Judge-your-Netflix/web/src/components/GetStarted.js\";\nimport React, { useState } from \"react\";\nimport { Button, Container, Row, Col } from \"react-bootstrap\";\nimport InstructionPage from \"./Instruction\";\nimport { Link } from \"react-router-dom\";\nimport Sample from \"./Sample\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst GetStarted = () => {\n  const [instruction, setInstruction] = useState(false);\n  const [no, setNo] = useState(false);\n  const [showSample, setShowSample] = useState(false);\n  const [noButtonDisplay, setNoButtonDisplay] = useState(\"inline\");\n  const [okButtonDisplay, setOkButtonDisplay] = useState(\"inline\");\n  const [okButtonColor, setOkButtonColor] = useState(\"light\");\n  const [noButtonColor, setNoButtonColor] = useState(\"light\");\n\n  const handleOkButton = () => {\n    setInstruction(true);\n    setNoButtonDisplay(\"none\");\n    setOkButtonColor(\"dark\");\n  };\n\n  const handleSampleButton = () => {\n    setNo(true);\n    setOkButtonDisplay(\"none\");\n    setNoButtonColor(\"dark\");\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: showSample ? /*#__PURE__*/_jsxDEV(Sample, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(Container, {\n      className: \"text-right\",\n      children: [/*#__PURE__*/_jsxDEV(Row, {\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"To get started, I will need to see your Netflix viewing history. Don't worry, I will just take a look at what you watched. I won't post or change anything.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Row, {\n        className: \"mb-3\",\n        children: /*#__PURE__*/_jsxDEV(Col, {\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            variant: okButtonColor,\n            onClick: handleOkButton,\n            style: {\n              display: okButtonDisplay\n            },\n            children: \"Got it\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Row, {\n        className: \"mb-4\",\n        children: /*#__PURE__*/_jsxDEV(Col, {\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            variant: noButtonColor,\n            onClick: handleSampleButton,\n            style: {\n              display: noButtonDisplay\n            },\n            children: \"No I don't want to share my view history\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 11\n      }, this), no && /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"I can't judge your Netflix without seeing your view history. I guess you can see how great our analysis could be using our sample data.....\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(Link, {\n          to: \"/sample\",\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            children: \"Show me sample analysis\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 13\n      }, this), instruction && /*#__PURE__*/_jsxDEV(InstructionPage, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 27\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 5\n  }, this);\n};\n\nexport default GetStarted;","map":{"version":3,"sources":["/Users/Natalie/Desktop/SeniorPhase/Judge-your-Netflix/web/src/components/GetStarted.js"],"names":["React","useState","Button","Container","Row","Col","InstructionPage","Link","Sample","GetStarted","instruction","setInstruction","no","setNo","showSample","setShowSample","noButtonDisplay","setNoButtonDisplay","okButtonDisplay","setOkButtonDisplay","okButtonColor","setOkButtonColor","noButtonColor","setNoButtonColor","handleOkButton","handleSampleButton","display"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport { Button, Container, Row, Col } from \"react-bootstrap\";\nimport InstructionPage from \"./Instruction\";\nimport { Link } from \"react-router-dom\";\nimport Sample from \"./Sample\";\n\nconst GetStarted = () => {\n  const [instruction, setInstruction] = useState(false);\n  const [no, setNo] = useState(false);\n  const [showSample, setShowSample] = useState(false);\n  const [noButtonDisplay, setNoButtonDisplay] = useState(\"inline\");\n  const [okButtonDisplay, setOkButtonDisplay] = useState(\"inline\");\n  const [okButtonColor, setOkButtonColor] = useState(\"light\");\n  const [noButtonColor, setNoButtonColor] = useState(\"light\");\n\n  const handleOkButton = () => {\n    setInstruction(true);\n    setNoButtonDisplay(\"none\");\n    setOkButtonColor(\"dark\");\n  };\n\n  const handleSampleButton = () => {\n    setNo(true);\n    setOkButtonDisplay(\"none\");\n    setNoButtonColor(\"dark\");\n  };\n\n  return (\n    <div>\n      {showSample ? (\n        <Sample />\n      ) : (\n        <Container className=\"text-right\">\n          <Row>\n            <p>\n              To get started, I will need to see your Netflix viewing history.\n              Don't worry, I will just take a look at what you watched. I won't\n              post or change anything.\n            </p>\n          </Row>\n          <Row className=\"mb-3\">\n            <Col>\n              <Button\n                variant={okButtonColor}\n                onClick={handleOkButton}\n                style={{ display: okButtonDisplay }}\n              >\n                Got it\n              </Button>\n            </Col>\n          </Row>\n          <Row className=\"mb-4\">\n            <Col>\n              <Button\n                variant={noButtonColor}\n                onClick={handleSampleButton}\n                style={{ display: noButtonDisplay }}\n              >\n                No I don't want to share my view history\n              </Button>\n            </Col>\n          </Row>\n          {no && (\n            <div>\n              <p>\n                I can't judge your Netflix without seeing your view history. I\n                guess you can see how great our analysis could be using our\n                sample data.....\n              </p>\n              <Link to=\"/sample\">\n                <Button>Show me sample analysis</Button>\n              </Link>\n            </div>\n          )}\n          {instruction && <InstructionPage />}\n        </Container>\n      )}\n    </div>\n  );\n};\n\nexport default GetStarted;\n"]},"metadata":{},"sourceType":"module"}