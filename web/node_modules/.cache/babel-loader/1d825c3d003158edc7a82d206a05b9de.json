{"ast":null,"code":"var _jsxFileName = \"/Users/Natalie/Desktop/SeniorPhase/Judge-your-Netflix/web/src/components/resultsComponent/ShowsCount.js\";\nimport React from \"react\";\nimport { HorizontalBar } from \"react-chartjs-2\";\nimport { Card, Button, Container, Row, Col } from \"react-bootstrap\";\nimport \"./charts.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function ShowsCount(props) {\n  const {\n    result\n  } = props; //convert data object to arrays\n\n  const resultsArr = Object.entries(result); //sort the data to small to large\n\n  const sorted = resultsArr.sort((a, b) => b[1] - a[1]); //filter only the top 20 most viewed shows/movies\n\n  const limitToTopTwenty = sorted.slice(-20);\n  const top1Name = limitToTopTwenty[0][0];\n  const top1Count = limitToTopTwenty[0][1];\n  const top2Name = limitToTopTwenty[1][0];\n  const top2Count = limitToTopTwenty[1][1];\n  const top3Name = limitToTopTwenty[2][0];\n  const top3Count = limitToTopTwenty[2][1]; //define yValues & xValues to be used with your chart\n\n  const yValues = limitToTopTwenty.map(data => data[1]);\n  const xValues = limitToTopTwenty.map(data => data[0]); //main data set for Graph\n\n  const resultData = {\n    labels: xValues,\n    datasets: [{\n      data: yValues,\n      backgroundColor: \"rgba(234, 87, 102, 0.6)\",\n      borderColor: \"rgba(234, 87, 102, 0.6)\"\n    }]\n  }; //option for Graph\n\n  const options = {\n    maintainAspectRatio: false,\n    title: {\n      display: true,\n      text: \"Which shows do you watch the most?\",\n      fontSize: 20,\n      fontColor: \"rgb(224, 228, 228)\"\n    },\n    legend: {\n      display: false\n    },\n    layout: {\n      padding: {\n        top: 10\n      }\n    },\n    scales: {\n      yAxes: [{\n        scaleLabel: {\n          display: true,\n          labelString: \"total view count (per watch event)\",\n          fontColor: \"rgb(224, 228, 228)\"\n        },\n        ticks: {\n          fontColor: \"rgb(224, 228, 228)\"\n        }\n      }],\n      xAxes: [{\n        scaleLabel: {\n          fontColor: \"rgb(224, 228, 228)\"\n        },\n        ticks: {\n          fontColor: \"rgb(224, 228, 228)\"\n        }\n      }]\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Card, {\n    style: {\n      background: \"rgb(34, 36, 41)\",\n      boxShadow: \"0 0 6px rgba(0, 0, 0, 0.1)\",\n      maxWidth: \"600px\",\n      height: \"600px\",\n      borderRadius: \"10px\",\n      overflow: \"hidden\",\n      padding: \"2em\",\n      color: \"rgb(224, 228, 228)\",\n      display: \"flex\",\n      justifyContent: \"center\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(HorizontalBar, {\n        data: resultData,\n        options: options,\n        width: 500,\n        height: 400\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      style: {\n        fontSize: \"15px\"\n      },\n      children: [\"Your most viewed show was \", top1Name, \" and you watched it\", /*#__PURE__*/_jsxDEV(\"span\", {\n        style: {\n          color: \"red\"\n        },\n        children: [\" \", top1Count]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 9\n      }, this), \" times!\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 84,\n    columnNumber: 5\n  }, this);\n}","map":{"version":3,"sources":["/Users/Natalie/Desktop/SeniorPhase/Judge-your-Netflix/web/src/components/resultsComponent/ShowsCount.js"],"names":["React","HorizontalBar","Card","Button","Container","Row","Col","ShowsCount","props","result","resultsArr","Object","entries","sorted","sort","a","b","limitToTopTwenty","slice","top1Name","top1Count","top2Name","top2Count","top3Name","top3Count","yValues","map","data","xValues","resultData","labels","datasets","backgroundColor","borderColor","options","maintainAspectRatio","title","display","text","fontSize","fontColor","legend","layout","padding","top","scales","yAxes","scaleLabel","labelString","ticks","xAxes","background","boxShadow","maxWidth","height","borderRadius","overflow","color","justifyContent"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,aAAT,QAA8B,iBAA9B;AACA,SAASC,IAAT,EAAeC,MAAf,EAAuBC,SAAvB,EAAkCC,GAAlC,EAAuCC,GAAvC,QAAkD,iBAAlD;AACA,OAAO,cAAP;;AAEA,eAAe,SAASC,UAAT,CAAoBC,KAApB,EAA2B;AACxC,QAAM;AAAEC,IAAAA;AAAF,MAAaD,KAAnB,CADwC,CAGxC;;AACA,QAAME,UAAU,GAAGC,MAAM,CAACC,OAAP,CAAeH,MAAf,CAAnB,CAJwC,CAMxC;;AACA,QAAMI,MAAM,GAAGH,UAAU,CAACI,IAAX,CAAgB,CAACC,CAAD,EAAIC,CAAJ,KAAUA,CAAC,CAAC,CAAD,CAAD,GAAOD,CAAC,CAAC,CAAD,CAAlC,CAAf,CAPwC,CASxC;;AACA,QAAME,gBAAgB,GAAGJ,MAAM,CAACK,KAAP,CAAa,CAAC,EAAd,CAAzB;AAEA,QAAMC,QAAQ,GAAGF,gBAAgB,CAAC,CAAD,CAAhB,CAAoB,CAApB,CAAjB;AACA,QAAMG,SAAS,GAAGH,gBAAgB,CAAC,CAAD,CAAhB,CAAoB,CAApB,CAAlB;AACA,QAAMI,QAAQ,GAAGJ,gBAAgB,CAAC,CAAD,CAAhB,CAAoB,CAApB,CAAjB;AACA,QAAMK,SAAS,GAAGL,gBAAgB,CAAC,CAAD,CAAhB,CAAoB,CAApB,CAAlB;AACA,QAAMM,QAAQ,GAAGN,gBAAgB,CAAC,CAAD,CAAhB,CAAoB,CAApB,CAAjB;AACA,QAAMO,SAAS,GAAGP,gBAAgB,CAAC,CAAD,CAAhB,CAAoB,CAApB,CAAlB,CAjBwC,CAmBxC;;AACA,QAAMQ,OAAO,GAAGR,gBAAgB,CAACS,GAAjB,CAAsBC,IAAD,IAAUA,IAAI,CAAC,CAAD,CAAnC,CAAhB;AACA,QAAMC,OAAO,GAAGX,gBAAgB,CAACS,GAAjB,CAAsBC,IAAD,IAAUA,IAAI,CAAC,CAAD,CAAnC,CAAhB,CArBwC,CAuBxC;;AACA,QAAME,UAAU,GAAG;AACjBC,IAAAA,MAAM,EAAEF,OADS;AAEjBG,IAAAA,QAAQ,EAAE,CACR;AACEJ,MAAAA,IAAI,EAAEF,OADR;AAEEO,MAAAA,eAAe,EAAE,yBAFnB;AAGEC,MAAAA,WAAW,EAAE;AAHf,KADQ;AAFO,GAAnB,CAxBwC,CAmCxC;;AACA,QAAMC,OAAO,GAAG;AACdC,IAAAA,mBAAmB,EAAE,KADP;AAEdC,IAAAA,KAAK,EAAE;AACLC,MAAAA,OAAO,EAAE,IADJ;AAELC,MAAAA,IAAI,EAAE,oCAFD;AAGLC,MAAAA,QAAQ,EAAE,EAHL;AAILC,MAAAA,SAAS,EAAE;AAJN,KAFO;AAQdC,IAAAA,MAAM,EAAE;AACNJ,MAAAA,OAAO,EAAE;AADH,KARM;AAWdK,IAAAA,MAAM,EAAE;AACNC,MAAAA,OAAO,EAAE;AACPC,QAAAA,GAAG,EAAE;AADE;AADH,KAXM;AAgBdC,IAAAA,MAAM,EAAE;AACNC,MAAAA,KAAK,EAAE,CACL;AACEC,QAAAA,UAAU,EAAE;AACVV,UAAAA,OAAO,EAAE,IADC;AAEVW,UAAAA,WAAW,EAAE,oCAFH;AAGVR,UAAAA,SAAS,EAAE;AAHD,SADd;AAMES,QAAAA,KAAK,EAAE;AACLT,UAAAA,SAAS,EAAE;AADN;AANT,OADK,CADD;AAaNU,MAAAA,KAAK,EAAE,CACL;AACEH,QAAAA,UAAU,EAAE;AACVP,UAAAA,SAAS,EAAE;AADD,SADd;AAIES,QAAAA,KAAK,EAAE;AACLT,UAAAA,SAAS,EAAE;AADN;AAJT,OADK;AAbD;AAhBM,GAAhB;AAyCA,sBACE,QAAC,IAAD;AACE,IAAA,KAAK,EAAE;AACLW,MAAAA,UAAU,EAAE,iBADP;AAELC,MAAAA,SAAS,EAAE,4BAFN;AAGLC,MAAAA,QAAQ,EAAE,OAHL;AAILC,MAAAA,MAAM,EAAE,OAJH;AAKLC,MAAAA,YAAY,EAAE,MALT;AAMLC,MAAAA,QAAQ,EAAE,QANL;AAOLb,MAAAA,OAAO,EAAE,KAPJ;AAQLc,MAAAA,KAAK,EAAE,oBARF;AASLpB,MAAAA,OAAO,EAAE,MATJ;AAULqB,MAAAA,cAAc,EAAE;AAVX,KADT;AAAA,4BAcE;AAAA,6BACE,QAAC,aAAD;AACE,QAAA,IAAI,EAAE7B,UADR;AAEE,QAAA,OAAO,EAAEK,OAFX;AAGE,QAAA,KAAK,EAAE,GAHT;AAIE,QAAA,MAAM,EAAE;AAJV;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAdF,eAsBE;AAAI,MAAA,KAAK,EAAE;AAAEK,QAAAA,QAAQ,EAAE;AAAZ,OAAX;AAAA,+CAC6BpB,QAD7B,sCAEE;AAAM,QAAA,KAAK,EAAE;AAAEsC,UAAAA,KAAK,EAAE;AAAT,SAAb;AAAA,wBAAiCrC,SAAjC;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YAtBF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAoCD","sourcesContent":["import React from \"react\";\nimport { HorizontalBar } from \"react-chartjs-2\";\nimport { Card, Button, Container, Row, Col } from \"react-bootstrap\";\nimport \"./charts.css\";\n\nexport default function ShowsCount(props) {\n  const { result } = props;\n\n  //convert data object to arrays\n  const resultsArr = Object.entries(result);\n\n  //sort the data to small to large\n  const sorted = resultsArr.sort((a, b) => b[1] - a[1]);\n\n  //filter only the top 20 most viewed shows/movies\n  const limitToTopTwenty = sorted.slice(-20);\n\n  const top1Name = limitToTopTwenty[0][0];\n  const top1Count = limitToTopTwenty[0][1];\n  const top2Name = limitToTopTwenty[1][0];\n  const top2Count = limitToTopTwenty[1][1];\n  const top3Name = limitToTopTwenty[2][0];\n  const top3Count = limitToTopTwenty[2][1];\n\n  //define yValues & xValues to be used with your chart\n  const yValues = limitToTopTwenty.map((data) => data[1]);\n  const xValues = limitToTopTwenty.map((data) => data[0]);\n\n  //main data set for Graph\n  const resultData = {\n    labels: xValues,\n    datasets: [\n      {\n        data: yValues,\n        backgroundColor: \"rgba(234, 87, 102, 0.6)\",\n        borderColor: \"rgba(234, 87, 102, 0.6)\",\n      },\n    ],\n  };\n\n  //option for Graph\n  const options = {\n    maintainAspectRatio: false,\n    title: {\n      display: true,\n      text: \"Which shows do you watch the most?\",\n      fontSize: 20,\n      fontColor: \"rgb(224, 228, 228)\",\n    },\n    legend: {\n      display: false,\n    },\n    layout: {\n      padding: {\n        top: 10,\n      },\n    },\n    scales: {\n      yAxes: [\n        {\n          scaleLabel: {\n            display: true,\n            labelString: \"total view count (per watch event)\",\n            fontColor: \"rgb(224, 228, 228)\",\n          },\n          ticks: {\n            fontColor: \"rgb(224, 228, 228)\",\n          },\n        },\n      ],\n      xAxes: [\n        {\n          scaleLabel: {\n            fontColor: \"rgb(224, 228, 228)\",\n          },\n          ticks: {\n            fontColor: \"rgb(224, 228, 228)\",\n          },\n        },\n      ],\n    },\n  };\n  return (\n    <Card\n      style={{\n        background: \"rgb(34, 36, 41)\",\n        boxShadow: \"0 0 6px rgba(0, 0, 0, 0.1)\",\n        maxWidth: \"600px\",\n        height: \"600px\",\n        borderRadius: \"10px\",\n        overflow: \"hidden\",\n        padding: \"2em\",\n        color: \"rgb(224, 228, 228)\",\n        display: \"flex\",\n        justifyContent: \"center\",\n      }}\n    >\n      <div>\n        <HorizontalBar\n          data={resultData}\n          options={options}\n          width={500}\n          height={400}\n        />\n      </div>\n      <h1 style={{ fontSize: \"15px\" }}>\n        Your most viewed show was {top1Name} and you watched it\n        <span style={{ color: \"red\" }}> {top1Count}</span> times!\n      </h1>\n      {/* <h2 style={{ fontSize: \"15px\" }}>Your Top 3 Most Viewed Shows</h2>\n        <p style={{ fontSize: \"15px\" }}>\n          {top1Name}: {top1Count} <br />\n          {top2Name} : {top2Count}\n          <br />\n          {top3Name}: {top3Count}\n        </p> */}\n    </Card>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}