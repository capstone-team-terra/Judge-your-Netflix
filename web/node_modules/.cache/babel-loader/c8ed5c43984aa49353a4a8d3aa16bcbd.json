{"ast":null,"code":"var _jsxFileName = \"/Users/Natalie/Desktop/SeniorPhase/Judge-your-Netflix/web/src/components/chatComponent/ChatbotPage.js\";\nimport React from \"react\";\nimport AllResults from \"../resultsComponent/AllResults\";\nimport ChatBot from \"react-simple-chatbot\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst steps = [{\n  id: \"0\",\n  message: \"We judge your Netflix taste.\",\n  trigger: \"1\"\n}, {\n  id: \"1\",\n  message: \"Bye!\",\n  end: true\n}];\n\nclass ChatbotPage extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      result: {},\n      clicked: false\n    };\n    this.handleClick = this.handleClick.bind(this);\n  }\n\n  componentDidMount() {\n    this.setState({\n      result: this.props.result\n    });\n  }\n\n  handleClick() {\n    this.setState({\n      clicked: true\n    });\n  }\n\n  render() {\n    return this.state.clicked ? /*#__PURE__*/_jsxDEV(AllResults, {\n      result: this.state.result\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Rendering Chatbot!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ChatBot, {\n        steps: steps\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        onClick: this.handleClick,\n        children: \"Get Your Results!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default ChatbotPage;","map":{"version":3,"sources":["/Users/Natalie/Desktop/SeniorPhase/Judge-your-Netflix/web/src/components/chatComponent/ChatbotPage.js"],"names":["React","AllResults","ChatBot","steps","id","message","trigger","end","ChatbotPage","Component","constructor","props","state","result","clicked","handleClick","bind","componentDidMount","setState","render"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,UAAP,MAAuB,gCAAvB;AACA,OAAOC,OAAP,MAAoB,sBAApB;;AACA,MAAMC,KAAK,GAAG,CACZ;AACEC,EAAAA,EAAE,EAAE,GADN;AAEEC,EAAAA,OAAO,EAAE,8BAFX;AAGEC,EAAAA,OAAO,EAAE;AAHX,CADY,EAMZ;AACEF,EAAAA,EAAE,EAAE,GADN;AAEEC,EAAAA,OAAO,EAAE,MAFX;AAGEE,EAAAA,GAAG,EAAE;AAHP,CANY,CAAd;;AAYA,MAAMC,WAAN,SAA0BR,KAAK,CAACS,SAAhC,CAA0C;AACxCC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACXC,MAAAA,MAAM,EAAE,EADG;AAEXC,MAAAA,OAAO,EAAE;AAFE,KAAb;AAIA,SAAKC,WAAL,GAAmB,KAAKA,WAAL,CAAiBC,IAAjB,CAAsB,IAAtB,CAAnB;AACD;;AACDC,EAAAA,iBAAiB,GAAG;AAClB,SAAKC,QAAL,CAAc;AAAEL,MAAAA,MAAM,EAAE,KAAKF,KAAL,CAAWE;AAArB,KAAd;AACD;;AACDE,EAAAA,WAAW,GAAG;AACZ,SAAKG,QAAL,CAAc;AAAEJ,MAAAA,OAAO,EAAE;AAAX,KAAd;AACD;;AACDK,EAAAA,MAAM,GAAG;AACP,WAAO,KAAKP,KAAL,CAAWE,OAAX,gBACL,QAAC,UAAD;AAAY,MAAA,MAAM,EAAE,KAAKF,KAAL,CAAWC;AAA/B;AAAA;AAAA;AAAA;AAAA,YADK,gBAGL;AAAA,8BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE,QAAC,OAAD;AAAS,QAAA,KAAK,EAAEV;AAAhB;AAAA;AAAA;AAAA;AAAA,cAFF,eAGE;AAAQ,QAAA,IAAI,EAAC,QAAb;AAAsB,QAAA,OAAO,EAAE,KAAKY,WAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAHF;AAAA;AAAA;AAAA;AAAA;AAAA,YAHF;AAWD;;AA3BuC;;AA6B1C,eAAeP,WAAf","sourcesContent":["import React from \"react\";\nimport AllResults from \"../resultsComponent/AllResults\";\nimport ChatBot from \"react-simple-chatbot\";\nconst steps = [\n  {\n    id: \"0\",\n    message: \"We judge your Netflix taste.\",\n    trigger: \"1\",\n  },\n  {\n    id: \"1\",\n    message: \"Bye!\",\n    end: true,\n  },\n];\nclass ChatbotPage extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      result: {},\n      clicked: false,\n    };\n    this.handleClick = this.handleClick.bind(this);\n  }\n  componentDidMount() {\n    this.setState({ result: this.props.result });\n  }\n  handleClick() {\n    this.setState({ clicked: true });\n  }\n  render() {\n    return this.state.clicked ? (\n      <AllResults result={this.state.result} />\n    ) : (\n      <div>\n        <h2>Rendering Chatbot!</h2>\n        <ChatBot steps={steps} />\n        <button type=\"button\" onClick={this.handleClick}>\n          Get Your Results!\n        </button>\n      </div>\n    );\n  }\n}\nexport default ChatbotPage;\n"]},"metadata":{},"sourceType":"module"}