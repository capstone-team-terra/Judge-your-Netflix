{"ast":null,"code":"var _jsxFileName = \"/Users/Natalie/Desktop/SeniorPhase/Judge-your-Netflix/web/src/components/GetStarted.js\";\nimport React, { useState } from \"react\";\nimport { Button, Container, Row, Col } from \"react-bootstrap\";\nimport UploadPage from \"./UploadPage\";\nimport Sample from \"./Sample\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst GetStarted = () => {\n  const [showInstruction, setShowInstruction] = useState(false);\n  const [no, setNo] = useState(false);\n  const [showSample, setShowSample] = useState(false); // const [noButtonDisplay, setNoButtonDisplay] = useState(\"inline\");\n\n  const [okButtonDisplay, setOkButtonDisplay] = useState(\"inline\");\n  const [noButtonColor, setNoButtonColor] = useState(\"light\");\n\n  const handleOkButton = () => {\n    setShowInstruction(true); // setNoButtonDisplay(\"none\");\n  };\n\n  const handleNoButton = () => {\n    setNo(true);\n    setOkButtonDisplay(\"none\");\n    setNoButtonColor(\"dark\");\n  };\n\n  const handleSampleButton = () => {\n    setShowSample(true);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: showInstruction ? /*#__PURE__*/_jsxDEV(UploadPage, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 9\n    }, this) : showSample ? /*#__PURE__*/_jsxDEV(Sample, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(Container, {\n      className: \"text-left\",\n      children: [/*#__PURE__*/_jsxDEV(Row, {\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"To get started, I will need to see your Netflix viewing history. Don't worry, I will just take a look at what you watched. I won't post or change anything.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Row, {\n        className: \"mb-3\",\n        children: /*#__PURE__*/_jsxDEV(Col, {\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"light\",\n            onClick: handleOkButton,\n            style: {\n              display: okButtonDisplay\n            },\n            children: \"Got it\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Row, {\n        className: \"mb-4\",\n        children: /*#__PURE__*/_jsxDEV(Col, {\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            variant: noButtonColor,\n            onClick: handleNoButton // style={{ display: noButtonDisplay }}\n            ,\n            children: \"No I don't want to share my view history\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 11\n      }, this), no && /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"I can't judge your Netflix without seeing your view history. I guess you can see how great our analysis could be using our sample data.....\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          className: \"mb-3\",\n          onClick: handleSampleButton,\n          children: \"Show me sample analysis\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"or..... I change my mind\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"light\",\n          onClick: handleOkButton,\n          children: \"Take me to upload page\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this);\n};\n\nexport default GetStarted;","map":{"version":3,"sources":["/Users/Natalie/Desktop/SeniorPhase/Judge-your-Netflix/web/src/components/GetStarted.js"],"names":["React","useState","Button","Container","Row","Col","UploadPage","Sample","GetStarted","showInstruction","setShowInstruction","no","setNo","showSample","setShowSample","okButtonDisplay","setOkButtonDisplay","noButtonColor","setNoButtonColor","handleOkButton","handleNoButton","handleSampleButton","display"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,MAAT,EAAiBC,SAAjB,EAA4BC,GAA5B,EAAiCC,GAAjC,QAA4C,iBAA5C;AACA,OAAOC,UAAP,MAAuB,cAAvB;AACA,OAAOC,MAAP,MAAmB,UAAnB;;;AAEA,MAAMC,UAAU,GAAG,MAAM;AACvB,QAAM,CAACC,eAAD,EAAkBC,kBAAlB,IAAwCT,QAAQ,CAAC,KAAD,CAAtD;AACA,QAAM,CAACU,EAAD,EAAKC,KAAL,IAAcX,QAAQ,CAAC,KAAD,CAA5B;AACA,QAAM,CAACY,UAAD,EAAaC,aAAb,IAA8Bb,QAAQ,CAAC,KAAD,CAA5C,CAHuB,CAIvB;;AACA,QAAM,CAACc,eAAD,EAAkBC,kBAAlB,IAAwCf,QAAQ,CAAC,QAAD,CAAtD;AACA,QAAM,CAACgB,aAAD,EAAgBC,gBAAhB,IAAoCjB,QAAQ,CAAC,OAAD,CAAlD;;AAEA,QAAMkB,cAAc,GAAG,MAAM;AAC3BT,IAAAA,kBAAkB,CAAC,IAAD,CAAlB,CAD2B,CAE3B;AACD,GAHD;;AAKA,QAAMU,cAAc,GAAG,MAAM;AAC3BR,IAAAA,KAAK,CAAC,IAAD,CAAL;AACAI,IAAAA,kBAAkB,CAAC,MAAD,CAAlB;AACAE,IAAAA,gBAAgB,CAAC,MAAD,CAAhB;AACD,GAJD;;AAMA,QAAMG,kBAAkB,GAAG,MAAM;AAC/BP,IAAAA,aAAa,CAAC,IAAD,CAAb;AACD,GAFD;;AAIA,sBACE;AAAA,cACGL,eAAe,gBACd,QAAC,UAAD;AAAA;AAAA;AAAA;AAAA,YADc,GAEZI,UAAU,gBACZ,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,YADY,gBAGZ,QAAC,SAAD;AAAW,MAAA,SAAS,EAAC,WAArB;AAAA,8BACE,QAAC,GAAD;AAAA,+BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cADF,eAQE,QAAC,GAAD;AAAK,QAAA,SAAS,EAAC,MAAf;AAAA,+BACE,QAAC,GAAD;AAAA,iCACE,QAAC,MAAD;AACE,YAAA,OAAO,EAAC,OADV;AAEE,YAAA,OAAO,EAAEM,cAFX;AAGE,YAAA,KAAK,EAAE;AAAEG,cAAAA,OAAO,EAAEP;AAAX,aAHT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cARF,eAmBE,QAAC,GAAD;AAAK,QAAA,SAAS,EAAC,MAAf;AAAA,+BACE,QAAC,GAAD;AAAA,iCACE,QAAC,MAAD;AACE,YAAA,OAAO,EAAEE,aADX;AAEE,YAAA,OAAO,EAAEG,cAFX,CAGE;AAHF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cAnBF,EA8BGT,EAAE,iBACD;AAAA,gCACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAME,QAAC,MAAD;AAAQ,UAAA,SAAS,EAAC,MAAlB;AAAyB,UAAA,OAAO,EAAEU,kBAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBANF,eASE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBATF,eAUE,QAAC,MAAD;AAAQ,UAAA,OAAO,EAAC,OAAhB;AAAwB,UAAA,OAAO,EAAEF,cAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAVF;AAAA;AAAA;AAAA;AAAA;AAAA,cA/BJ;AAAA;AAAA;AAAA;AAAA;AAAA;AANJ;AAAA;AAAA;AAAA;AAAA,UADF;AAyDD,CAhFD;;AAkFA,eAAeX,UAAf","sourcesContent":["import React, { useState } from \"react\";\nimport { Button, Container, Row, Col } from \"react-bootstrap\";\nimport UploadPage from \"./UploadPage\";\nimport Sample from \"./Sample\";\n\nconst GetStarted = () => {\n  const [showInstruction, setShowInstruction] = useState(false);\n  const [no, setNo] = useState(false);\n  const [showSample, setShowSample] = useState(false);\n  // const [noButtonDisplay, setNoButtonDisplay] = useState(\"inline\");\n  const [okButtonDisplay, setOkButtonDisplay] = useState(\"inline\");\n  const [noButtonColor, setNoButtonColor] = useState(\"light\");\n\n  const handleOkButton = () => {\n    setShowInstruction(true);\n    // setNoButtonDisplay(\"none\");\n  };\n\n  const handleNoButton = () => {\n    setNo(true);\n    setOkButtonDisplay(\"none\");\n    setNoButtonColor(\"dark\");\n  };\n\n  const handleSampleButton = () => {\n    setShowSample(true);\n  };\n\n  return (\n    <div>\n      {showInstruction ? (\n        <UploadPage />\n      ) : showSample ? (\n        <Sample />\n      ) : (\n        <Container className=\"text-left\">\n          <Row>\n            <p>\n              To get started, I will need to see your Netflix viewing history.\n              Don't worry, I will just take a look at what you watched. I won't\n              post or change anything.\n            </p>\n          </Row>\n          <Row className=\"mb-3\">\n            <Col>\n              <Button\n                variant=\"light\"\n                onClick={handleOkButton}\n                style={{ display: okButtonDisplay }}\n              >\n                Got it\n              </Button>\n            </Col>\n          </Row>\n          <Row className=\"mb-4\">\n            <Col>\n              <Button\n                variant={noButtonColor}\n                onClick={handleNoButton}\n                // style={{ display: noButtonDisplay }}\n              >\n                No I don't want to share my view history\n              </Button>\n            </Col>\n          </Row>\n          {no && (\n            <div>\n              <p>\n                I can't judge your Netflix without seeing your view history. I\n                guess you can see how great our analysis could be using our\n                sample data.....\n              </p>\n              <Button className=\"mb-3\" onClick={handleSampleButton}>\n                Show me sample analysis\n              </Button>\n              <p>or..... I change my mind</p>\n              <Button variant=\"light\" onClick={handleOkButton}>\n                Take me to upload page\n              </Button>\n            </div>\n          )}\n        </Container>\n      )}\n    </div>\n  );\n};\n\nexport default GetStarted;\n"]},"metadata":{},"sourceType":"module"}