{"ast":null,"code":"var _jsxFileName = \"/Users/Natalie/Desktop/SeniorPhase/Judge-your-Netflix/web/src/components/resultsComponent/ViewCount.js\";\nimport React from \"react\";\nimport { Line } from \"react-chartjs-2\";\nimport moment from \"moment\";\nimport { Card } from \"react-bootstrap\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function ViewCount(props) {\n  const {\n    result\n  } = props; //convert data object to arrays\n\n  const resultsArr = Object.entries(result); //get only past 1 year data\n\n  const pastYear = resultsArr.slice(-12); //total view count\n\n  const totalSum = Object.keys(result).reduce((acc, key) => acc + result[key], 0); //define yValues & xValues to be used with your chart\n\n  const yValues = pastYear.map(data => data[1]);\n  const xValues = pastYear.map(data => moment(data[0]).format(\"MMM YY\")); //main data set for Graph\n\n  const resultData = {\n    labels: xValues,\n    datasets: [{\n      labels: \"Your View Count\",\n      data: yValues,\n      backgroundColor: \"rgba(87, 121, 234, 0.6)\",\n      borderColor: \"rgba(87, 121, 234, 0.6)\",\n      pointHoverRadius: 20,\n      pointHoverBorderWidth: 5\n    }]\n  }; //option for Graph\n\n  const options = {\n    maintainAspectRatio: false,\n    legend: {\n      display: false\n    },\n    scales: {\n      yAxes: [{\n        scaleLabel: {\n          display: true,\n          labelString: \"total view count (per watch event)\",\n          fontColor: \"rgb(224, 228, 228)\",\n          fontSize: 15\n        },\n        ticks: {\n          fontColor: \"rgb(224, 228, 228)\",\n          fontSize: 15\n        },\n        gridLines: {\n          color: \"rgb(25, 25, 25)\"\n        }\n      }],\n      xAxes: [{\n        scaleLabel: {\n          display: true,\n          labelString: \"*Abbreviated to only show past year data (per month)\",\n          fontColor: \"rgb(120, 150, 150)\",\n          fontSize: 15\n        },\n        ticks: {\n          fontColor: \"rgb(224, 228, 228)\",\n          fontSize: 15\n        },\n        gridLines: {\n          color: \"rgb(25, 25, 25)\"\n        }\n      }]\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Card, {\n    style: {\n      background: \"rgb(34, 36, 41)\",\n      boxShadow: \"0px 0px 10px 5px rgba(100, 100, 100, .6)\",\n      maxWidth: \"700px\",\n      height: \"690px\",\n      borderRadius: \"10px\",\n      overflow: \"hidden\",\n      paddingTop: \"1.5em\",\n      paddingRight: \"1.5em\",\n      paddingLeft: \"1.5em\",\n      paddingBottom: \"1em\",\n      margin: \"1em\",\n      color: \"rgb(224, 228, 228)\",\n      display: \"flex\",\n      justifyContent: \"space-between\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(Card.Title, {\n      style: {\n        textAlign: \"center\",\n        fontSize: 30\n      },\n      children: [\"Total number of times you watched Netflix\", \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(Line, {\n        data: resultData,\n        options: options,\n        width: 600,\n        height: 400\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        fontSize: \"20px\",\n        fontStyle: \"italic\"\n      },\n      children: [\"You watched total of\", \" \", /*#__PURE__*/_jsxDEV(\"span\", {\n        style: {\n          color: \"rgba(234, 87, 102)\"\n        },\n        children: [\" \", totalSum]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 9\n      }, this), \"shows since you signed up...\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 84,\n    columnNumber: 5\n  }, this);\n}","map":{"version":3,"sources":["/Users/Natalie/Desktop/SeniorPhase/Judge-your-Netflix/web/src/components/resultsComponent/ViewCount.js"],"names":["React","Line","moment","Card","ViewCount","props","result","resultsArr","Object","entries","pastYear","slice","totalSum","keys","reduce","acc","key","yValues","map","data","xValues","format","resultData","labels","datasets","backgroundColor","borderColor","pointHoverRadius","pointHoverBorderWidth","options","maintainAspectRatio","legend","display","scales","yAxes","scaleLabel","labelString","fontColor","fontSize","ticks","gridLines","color","xAxes","background","boxShadow","maxWidth","height","borderRadius","overflow","paddingTop","paddingRight","paddingLeft","paddingBottom","margin","justifyContent","textAlign","fontStyle"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { Line } from \"react-chartjs-2\";\nimport moment from \"moment\";\nimport { Card } from \"react-bootstrap\";\n\nexport default function ViewCount(props) {\n  const { result } = props;\n\n  //convert data object to arrays\n  const resultsArr = Object.entries(result);\n\n  //get only past 1 year data\n  const pastYear = resultsArr.slice(-12);\n\n  //total view count\n  const totalSum = Object.keys(result).reduce(\n    (acc, key) => acc + result[key],\n    0\n  );\n\n  //define yValues & xValues to be used with your chart\n  const yValues = pastYear.map((data) => data[1]);\n  const xValues = pastYear.map((data) => moment(data[0]).format(\"MMM YY\"));\n\n  //main data set for Graph\n  const resultData = {\n    labels: xValues,\n    datasets: [\n      {\n        labels: \"Your View Count\",\n        data: yValues,\n        backgroundColor: \"rgba(87, 121, 234, 0.6)\",\n        borderColor: \"rgba(87, 121, 234, 0.6)\",\n        pointHoverRadius: 20,\n        pointHoverBorderWidth: 5,\n      },\n    ],\n  };\n\n  //option for Graph\n  const options = {\n    maintainAspectRatio: false,\n    legend: {\n      display: false,\n    },\n    scales: {\n      yAxes: [\n        {\n          scaleLabel: {\n            display: true,\n            labelString: \"total view count (per watch event)\",\n            fontColor: \"rgb(224, 228, 228)\",\n            fontSize: 15,\n          },\n          ticks: {\n            fontColor: \"rgb(224, 228, 228)\",\n            fontSize: 15,\n          },\n          gridLines: {\n            color: \"rgb(25, 25, 25)\",\n          },\n        },\n      ],\n      xAxes: [\n        {\n          scaleLabel: {\n            display: true,\n            labelString: \"*Abbreviated to only show past year data (per month)\",\n            fontColor: \"rgb(120, 150, 150)\",\n            fontSize: 15,\n          },\n          ticks: {\n            fontColor: \"rgb(224, 228, 228)\",\n            fontSize: 15,\n          },\n          gridLines: {\n            color: \"rgb(25, 25, 25)\",\n          },\n        },\n      ],\n    },\n  };\n  return (\n    <Card\n      style={{\n        background: \"rgb(34, 36, 41)\",\n        boxShadow: \"0px 0px 10px 5px rgba(100, 100, 100, .6)\",\n        maxWidth: \"700px\",\n        height: \"690px\",\n        borderRadius: \"10px\",\n        overflow: \"hidden\",\n        paddingTop: \"1.5em\",\n        paddingRight: \"1.5em\",\n        paddingLeft: \"1.5em\",\n        paddingBottom: \"1em\",\n        margin: \"1em\",\n        color: \"rgb(224, 228, 228)\",\n        display: \"flex\",\n        justifyContent: \"space-between\",\n      }}\n    >\n      <Card.Title style={{ textAlign: \"center\", fontSize: 30 }}>\n        Total number of times you watched Netflix{\" \"}\n      </Card.Title>\n      <div>\n        <Line data={resultData} options={options} width={600} height={400} />\n      </div>\n      <p style={{ fontSize: \"20px\", fontStyle: \"italic\" }}>\n        You watched total of{\" \"}\n        <span style={{ color: \"rgba(234, 87, 102)\" }}> {totalSum}</span>\n        shows since you signed up...\n      </p>\n    </Card>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}